// Code generated by goyacc -o parser.go -v parser.output parser.y. DO NOT EDIT.

//line parser.y:2
package parser

import __yyfmt__ "fmt"

//line parser.y:2

import (
	"strconv"

	"github.com/mithrandie/csvq/lib/value"
)

//line parser.y:11
type yySymType struct {
	yys         int
	program     []Statement
	statement   Statement
	queryexpr   QueryExpression
	queryexprs  []QueryExpression
	expression  Expression
	expressions []Expression
	identifier  Identifier
	table       Table
	variable    Variable
	variables   []Variable
	varassign   VariableAssignment
	varassigns  []VariableAssignment
	envvar      EnvironmentVariable
	flag        Flag
	updateset   UpdateSet
	updatesets  []UpdateSet
	columndef   ColumnDefault
	columndefs  []ColumnDefault
	elseif      []ElseIf
	elseexpr    Else
	casewhen    []CaseWhen
	caseelse    CaseElse
	fetchpos    FetchPosition
	replaceval  ReplaceValue
	replacevals []ReplaceValue
	token       Token
	bool        bool
}

const IDENTIFIER = 57346
const STRING = 57347
const INTEGER = 57348
const FLOAT = 57349
const BOOLEAN = 57350
const TERNARY = 57351
const DATETIME = 57352
const VARIABLE = 57353
const FLAG = 57354
const ENVIRONMENT_VARIABLE = 57355
const RUNTIME_INFORMATION = 57356
const EXTERNAL_COMMAND = 57357
const PLACEHOLDER = 57358
const SELECT = 57359
const FROM = 57360
const UPDATE = 57361
const SET = 57362
const UNSET = 57363
const DELETE = 57364
const WHERE = 57365
const INSERT = 57366
const INTO = 57367
const VALUES = 57368
const REPLACE = 57369
const AS = 57370
const DUAL = 57371
const STDIN = 57372
const RECURSIVE = 57373
const CREATE = 57374
const ADD = 57375
const DROP = 57376
const ALTER = 57377
const TABLE = 57378
const FIRST = 57379
const LAST = 57380
const AFTER = 57381
const BEFORE = 57382
const DEFAULT = 57383
const RENAME = 57384
const TO = 57385
const VIEW = 57386
const ORDER = 57387
const GROUP = 57388
const HAVING = 57389
const BY = 57390
const ASC = 57391
const DESC = 57392
const LIMIT = 57393
const OFFSET = 57394
const PERCENT = 57395
const JOIN = 57396
const INNER = 57397
const OUTER = 57398
const LEFT = 57399
const RIGHT = 57400
const FULL = 57401
const CROSS = 57402
const ON = 57403
const USING = 57404
const NATURAL = 57405
const LATERAL = 57406
const UNION = 57407
const INTERSECT = 57408
const EXCEPT = 57409
const ALL = 57410
const ANY = 57411
const EXISTS = 57412
const IN = 57413
const AND = 57414
const OR = 57415
const NOT = 57416
const BETWEEN = 57417
const LIKE = 57418
const IS = 57419
const NULL = 57420
const DISTINCT = 57421
const WITH = 57422
const RANGE = 57423
const UNBOUNDED = 57424
const PRECEDING = 57425
const FOLLOWING = 57426
const CURRENT = 57427
const ROW = 57428
const CASE = 57429
const IF = 57430
const ELSEIF = 57431
const WHILE = 57432
const WHEN = 57433
const THEN = 57434
const ELSE = 57435
const DO = 57436
const END = 57437
const DECLARE = 57438
const CURSOR = 57439
const FOR = 57440
const FETCH = 57441
const OPEN = 57442
const CLOSE = 57443
const DISPOSE = 57444
const PREPARE = 57445
const NEXT = 57446
const PRIOR = 57447
const ABSOLUTE = 57448
const RELATIVE = 57449
const SEPARATOR = 57450
const PARTITION = 57451
const OVER = 57452
const COMMIT = 57453
const ROLLBACK = 57454
const CONTINUE = 57455
const BREAK = 57456
const EXIT = 57457
const ECHO = 57458
const PRINT = 57459
const PRINTF = 57460
const SOURCE = 57461
const EXECUTE = 57462
const CHDIR = 57463
const PWD = 57464
const RELOAD = 57465
const REMOVE = 57466
const SYNTAX = 57467
const TRIGGER = 57468
const FUNCTION = 57469
const AGGREGATE = 57470
const BEGIN = 57471
const RETURN = 57472
const IGNORE = 57473
const WITHIN = 57474
const VAR = 57475
const SHOW = 57476
const TIES = 57477
const NULLS = 57478
const ROWS = 57479
const ONLY = 57480
const CSV = 57481
const JSON = 57482
const JSONL = 57483
const FIXED = 57484
const LTSV = 57485
const CSV_INLINE = 57486
const JSON_INLINE = 57487
const JSON_TABLE = 57488
const JSON_ROW = 57489
const SUBSTRING = 57490
const COUNT = 57491
const JSON_OBJECT = 57492
const AGGREGATE_FUNCTION = 57493
const LIST_FUNCTION = 57494
const ANALYTIC_FUNCTION = 57495
const FUNCTION_NTH = 57496
const FUNCTION_WITH_INS = 57497
const COMPARISON_OP = 57498
const STRING_OP = 57499
const SUBSTITUTION_OP = 57500
const UMINUS = 57501
const UPLUS = 57502

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENTIFIER",
	"STRING",
	"INTEGER",
	"FLOAT",
	"BOOLEAN",
	"TERNARY",
	"DATETIME",
	"VARIABLE",
	"FLAG",
	"ENVIRONMENT_VARIABLE",
	"RUNTIME_INFORMATION",
	"EXTERNAL_COMMAND",
	"PLACEHOLDER",
	"SELECT",
	"FROM",
	"UPDATE",
	"SET",
	"UNSET",
	"DELETE",
	"WHERE",
	"INSERT",
	"INTO",
	"VALUES",
	"REPLACE",
	"AS",
	"DUAL",
	"STDIN",
	"RECURSIVE",
	"CREATE",
	"ADD",
	"DROP",
	"ALTER",
	"TABLE",
	"FIRST",
	"LAST",
	"AFTER",
	"BEFORE",
	"DEFAULT",
	"RENAME",
	"TO",
	"VIEW",
	"ORDER",
	"GROUP",
	"HAVING",
	"BY",
	"ASC",
	"DESC",
	"LIMIT",
	"OFFSET",
	"PERCENT",
	"JOIN",
	"INNER",
	"OUTER",
	"LEFT",
	"RIGHT",
	"FULL",
	"CROSS",
	"ON",
	"USING",
	"NATURAL",
	"LATERAL",
	"UNION",
	"INTERSECT",
	"EXCEPT",
	"ALL",
	"ANY",
	"EXISTS",
	"IN",
	"AND",
	"OR",
	"NOT",
	"BETWEEN",
	"LIKE",
	"IS",
	"NULL",
	"DISTINCT",
	"WITH",
	"RANGE",
	"UNBOUNDED",
	"PRECEDING",
	"FOLLOWING",
	"CURRENT",
	"ROW",
	"CASE",
	"IF",
	"ELSEIF",
	"WHILE",
	"WHEN",
	"THEN",
	"ELSE",
	"DO",
	"END",
	"DECLARE",
	"CURSOR",
	"FOR",
	"FETCH",
	"OPEN",
	"CLOSE",
	"DISPOSE",
	"PREPARE",
	"NEXT",
	"PRIOR",
	"ABSOLUTE",
	"RELATIVE",
	"SEPARATOR",
	"PARTITION",
	"OVER",
	"COMMIT",
	"ROLLBACK",
	"CONTINUE",
	"BREAK",
	"EXIT",
	"ECHO",
	"PRINT",
	"PRINTF",
	"SOURCE",
	"EXECUTE",
	"CHDIR",
	"PWD",
	"RELOAD",
	"REMOVE",
	"SYNTAX",
	"TRIGGER",
	"FUNCTION",
	"AGGREGATE",
	"BEGIN",
	"RETURN",
	"IGNORE",
	"WITHIN",
	"VAR",
	"SHOW",
	"TIES",
	"NULLS",
	"ROWS",
	"ONLY",
	"CSV",
	"JSON",
	"JSONL",
	"FIXED",
	"LTSV",
	"CSV_INLINE",
	"JSON_INLINE",
	"JSON_TABLE",
	"JSON_ROW",
	"SUBSTRING",
	"COUNT",
	"JSON_OBJECT",
	"AGGREGATE_FUNCTION",
	"LIST_FUNCTION",
	"ANALYTIC_FUNCTION",
	"FUNCTION_NTH",
	"FUNCTION_WITH_INS",
	"COMPARISON_OP",
	"STRING_OP",
	"SUBSTITUTION_OP",
	"UMINUS",
	"UPLUS",
	"';'",
	"'='",
	"'-'",
	"'+'",
	"'*'",
	"'/'",
	"'%'",
	"'!'",
	"'('",
	"')'",
	"','",
	"'.'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line parser.y:2802

func SetDebugLevel(level int, verbose bool) {
	yyDebug = level
	yyErrorVerbose = verbose
}

func Parse(s string, sourceFile string, forPrepared bool, ansiQuotes bool) ([]Statement, int, error) {
	l := new(Lexer)
	l.Init(s, sourceFile, forPrepared, ansiQuotes)
	yyParse(l)
	return l.program, l.HolderNumber(), l.err
}

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	1, 1,
	-2, 220,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 21,
	1, 26,
	89, 26,
	91, 26,
	93, 26,
	95, 26,
	161, 26,
	-2, 239,
	-1, 27,
	65, 188,
	66, 188,
	67, 188,
	-2, 200,
	-1, 35,
	1, 78,
	89, 78,
	91, 78,
	93, 78,
	95, 78,
	161, 78,
	-2, 252,
	-1, 61,
	65, 189,
	66, 189,
	67, 189,
	-2, 244,
	-1, 121,
	19, 220,
	22, 220,
	24, 220,
	-2, 1,
	-1, 135,
	65, 188,
	66, 188,
	67, 188,
	-2, 200,
	-1, 175,
	1, 122,
	89, 122,
	91, 122,
	93, 122,
	95, 122,
	161, 122,
	-2, 233,
	-1, 176,
	1, 163,
	89, 163,
	91, 163,
	93, 163,
	95, 163,
	161, 163,
	-2, 239,
	-1, 181,
	1, 156,
	89, 156,
	91, 156,
	93, 156,
	95, 156,
	161, 156,
	-2, 239,
	-1, 182,
	1, 157,
	89, 157,
	91, 157,
	93, 157,
	95, 157,
	161, 157,
	-2, 239,
	-1, 183,
	1, 158,
	89, 158,
	91, 158,
	93, 158,
	95, 158,
	161, 158,
	-2, 239,
	-1, 184,
	1, 161,
	89, 161,
	91, 161,
	93, 161,
	95, 161,
	161, 161,
	-2, 233,
	-1, 185,
	1, 162,
	89, 162,
	91, 162,
	93, 162,
	95, 162,
	161, 162,
	-2, 239,
	-1, 188,
	1, 169,
	89, 169,
	91, 169,
	93, 169,
	95, 169,
	161, 169,
	-2, 233,
	-1, 189,
	1, 170,
	89, 170,
	91, 170,
	93, 170,
	95, 170,
	161, 170,
	-2, 239,
	-1, 255,
	89, 1,
	93, 1,
	95, 1,
	-2, 220,
	-1, 278,
	169, 358,
	-2, 485,
	-1, 279,
	169, 359,
	-2, 486,
	-1, 280,
	169, 360,
	-2, 487,
	-1, 281,
	169, 361,
	-2, 488,
	-1, 282,
	169, 362,
	-2, 489,
	-1, 293,
	54, 505,
	-2, 421,
	-1, 329,
	4, 144,
	135, 144,
	136, 144,
	137, 144,
	139, 144,
	140, 144,
	141, 144,
	142, 144,
	143, 144,
	-2, 239,
	-1, 330,
	4, 145,
	135, 145,
	136, 145,
	137, 145,
	139, 145,
	140, 145,
	141, 145,
	142, 145,
	143, 145,
	-2, 239,
	-1, 340,
	1, 174,
	89, 174,
	91, 174,
	93, 174,
	95, 174,
	161, 174,
	-2, 239,
	-1, 347,
	95, 4,
	-2, 220,
	-1, 366,
	71, 0,
	75, 0,
	76, 0,
	77, 0,
	156, 0,
	162, 0,
	-2, 279,
	-1, 367,
	71, 0,
	75, 0,
	76, 0,
	77, 0,
	156, 0,
	162, 0,
	-2, 281,
	-1, 376,
	71, 0,
	75, 0,
	76, 0,
	77, 0,
	156, 0,
	162, 0,
	-2, 291,
	-1, 415,
	95, 1,
	-2, 220,
	-1, 422,
	1, 210,
	52, 210,
	80, 210,
	89, 210,
	91, 210,
	93, 210,
	95, 210,
	98, 210,
	138, 210,
	161, 210,
	170, 210,
	-2, 239,
	-1, 423,
	1, 215,
	89, 215,
	91, 215,
	93, 215,
	95, 215,
	98, 215,
	99, 215,
	161, 215,
	170, 215,
	-2, 239,
	-1, 453,
	65, 189,
	66, 189,
	67, 189,
	-2, 378,
	-1, 474,
	1, 80,
	89, 80,
	91, 80,
	93, 80,
	95, 80,
	161, 80,
	-2, 239,
	-1, 475,
	1, 81,
	89, 81,
	91, 81,
	93, 81,
	95, 81,
	161, 81,
	-2, 233,
	-1, 476,
	1, 82,
	89, 82,
	91, 82,
	93, 82,
	95, 82,
	161, 82,
	-2, 239,
	-1, 477,
	1, 83,
	89, 83,
	91, 83,
	93, 83,
	95, 83,
	161, 83,
	-2, 233,
	-1, 478,
	1, 149,
	89, 149,
	91, 149,
	93, 149,
	95, 149,
	161, 149,
	-2, 233,
	-1, 479,
	1, 150,
	89, 150,
	91, 150,
	93, 150,
	95, 150,
	161, 150,
	-2, 239,
	-1, 480,
	1, 151,
	89, 151,
	91, 151,
	93, 151,
	95, 151,
	161, 151,
	-2, 233,
	-1, 481,
	1, 152,
	89, 152,
	91, 152,
	93, 152,
	95, 152,
	161, 152,
	-2, 239,
	-1, 484,
	1, 117,
	89, 117,
	91, 117,
	93, 117,
	95, 117,
	161, 117,
	171, 117,
	-2, 239,
	-1, 489,
	1, 419,
	89, 419,
	91, 419,
	93, 419,
	95, 419,
	161, 419,
	-2, 239,
	-1, 496,
	1, 175,
	89, 175,
	91, 175,
	93, 175,
	95, 175,
	161, 175,
	-2, 239,
	-1, 528,
	71, 0,
	75, 0,
	76, 0,
	77, 0,
	156, 0,
	162, 0,
	-2, 292,
	-1, 554,
	95, 1,
	-2, 220,
	-1, 561,
	91, 1,
	93, 1,
	95, 1,
	-2, 220,
	-1, 590,
	170, 356,
	171, 356,
	-2, 233,
	-1, 608,
	54, 505,
	-2, 381,
	-1, 648,
	19, 220,
	22, 220,
	24, 220,
	-2, 4,
	-1, 651,
	95, 4,
	-2, 220,
	-1, 652,
	95, 4,
	-2, 220,
	-1, 677,
	170, 261,
	171, 261,
	-2, 189,
	-1, 752,
	89, 4,
	93, 4,
	95, 4,
	-2, 220,
	-1, 757,
	95, 4,
	-2, 220,
	-1, 758,
	95, 4,
	-2, 220,
	-1, 784,
	89, 1,
	93, 1,
	95, 1,
	-2, 220,
	-1, 821,
	17, 516,
	80, 516,
	169, 516,
	-2, 87,
	-1, 829,
	1, 95,
	89, 95,
	91, 95,
	93, 95,
	95, 95,
	161, 95,
	-2, 233,
	-1, 830,
	1, 96,
	89, 96,
	91, 96,
	93, 96,
	95, 96,
	161, 96,
	-2, 239,
	-1, 834,
	95, 6,
	-2, 220,
	-1, 840,
	170, 128,
	171, 128,
	-2, 239,
	-1, 845,
	95, 4,
	-2, 220,
	-1, 915,
	95, 6,
	-2, 220,
	-1, 916,
	95, 6,
	-2, 220,
	-1, 920,
	95, 4,
	-2, 220,
	-1, 924,
	91, 4,
	93, 4,
	95, 4,
	-2, 220,
	-1, 965,
	19, 220,
	22, 220,
	24, 220,
	-2, 6,
	-1, 972,
	161, 62,
	-2, 239,
	-1, 1006,
	89, 6,
	93, 6,
	95, 6,
	-2, 220,
	-1, 1009,
	95, 8,
	-2, 220,
	-1, 1016,
	95, 6,
	-2, 220,
	-1, 1019,
	89, 4,
	93, 4,
	95, 4,
	-2, 220,
	-1, 1033,
	95, 6,
	-2, 220,
	-1, 1058,
	95, 6,
	-2, 220,
	-1, 1062,
	91, 6,
	93, 6,
	95, 6,
	-2, 220,
	-1, 1064,
	19, 220,
	22, 220,
	24, 220,
	-2, 8,
	-1, 1067,
	95, 8,
	-2, 220,
	-1, 1068,
	95, 8,
	-2, 220,
	-1, 1087,
	89, 8,
	93, 8,
	95, 8,
	-2, 220,
	-1, 1092,
	95, 8,
	-2, 220,
	-1, 1093,
	95, 8,
	-2, 220,
	-1, 1104,
	89, 6,
	93, 6,
	95, 6,
	-2, 220,
	-1, 1109,
	95, 8,
	-2, 220,
	-1, 1124,
	95, 8,
	-2, 220,
	-1, 1128,
	91, 8,
	93, 8,
	95, 8,
	-2, 220,
	-1, 1148,
	89, 8,
	93, 8,
	95, 8,
	-2, 220,
}

const yyPrivate = 57344

const yyLast = 4001

var yyAct = [...]int{
	124, 61, 1122, 130, 1123, 1057, 1096, 675, 1088, 1056,
	424, 1007, 201, 919, 918, 905, 753, 855, 505, 616,
	263, 931, 202, 854, 307, 632, 553, 731, 690, 141,
	98, 638, 726, 639, 607, 636, 583, 264, 805, 619,
	288, 567, 488, 260, 504, 26, 261, 297, 853, 133,
	598, 482, 503, 25, 603, 552, 362, 438, 732, 359,
	443, 293, 285, 273, 245, 442, 144, 1, 292, 497,
	271, 544, 84, 83, 61, 27, 209, 71, 186, 151,
	1010, 299, 213, 257, 353, 499, 3, 1035, 348, 332,
	253, 77, 234, 893, 894, 233, 234, 1046, 195, 233,
	248, 79, 233, 446, 135, 447, 448, 449, 441, 234,
	1053, 444, 522, 825, 155, 163, 895, 896, 879, 880,
	745, 746, 61, 814, 61, 1042, 179, 702, 703, 511,
	110, 338, 446, 259, 447, 448, 449, 441, 79, 79,
	444, 138, 68, 141, 140, 79, 137, 301, 256, 139,
	79, 79, 778, 79, 1029, 296, 276, 268, 290, 951,
	897, 743, 876, 215, 78, 742, 26, 192, 739, 225,
	224, 226, 227, 228, 25, 192, 154, 154, 723, 157,
	349, 720, 719, 704, 700, 79, 79, 646, 349, 254,
	609, 643, 1041, 574, 520, 580, 234, 349, 141, 233,
	102, 78, 349, 436, 286, 431, 357, 3, 78, 313,
	287, 119, 1028, 78, 78, 352, 78, 1026, 200, 445,
	272, 1025, 375, 320, 225, 224, 226, 227, 228, 349,
	308, 306, 311, 374, 79, 312, 1024, 1022, 1004, 592,
	337, 1003, 1002, 1001, 375, 375, 997, 612, 78, 78,
	992, 990, 373, 142, 620, 989, 61, 988, 987, 963,
	944, 111, 112, 113, 942, 278, 279, 280, 281, 282,
	303, 304, 305, 135, 400, 401, 941, 930, 917, 881,
	878, 851, 827, 368, 824, 301, 821, 818, 291, 427,
	142, 142, 355, 356, 802, 298, 393, 142, 518, 453,
	26, 795, 142, 142, 142, 142, 148, 777, 25, 760,
	741, 738, 722, 668, 667, 119, 666, 389, 388, 390,
	394, 395, 396, 411, 397, 398, 399, 665, 437, 221,
	230, 229, 220, 219, 222, 218, 428, 374, 581, 547,
	663, 3, 629, 542, 541, 351, 593, 471, 61, 540,
	535, 533, 429, 434, 141, 531, 141, 141, 457, 635,
	452, 545, 509, 412, 495, 433, 345, 346, 344, 102,
	953, 945, 375, 943, 458, 61, 939, 929, 375, 375,
	493, 494, 899, 885, 487, 863, 142, 125, 35, 861,
	860, 859, 857, 467, 831, 618, 466, 774, 110, 195,
	772, 771, 527, 375, 546, 546, 546, 762, 529, 530,
	705, 79, 490, 491, 216, 215, 61, 678, 492, 655,
	217, 225, 224, 226, 227, 228, 615, 701, 995, 514,
	141, 514, 514, 543, 517, 473, 301, 472, 456, 519,
	432, 524, 523, 152, 147, 513, 301, 515, 516, 258,
	147, 252, 538, 226, 227, 228, 154, 1064, 221, 230,
	26, 220, 219, 222, 218, 28, 242, 241, 25, 579,
	141, 550, 141, 532, 78, 594, 548, 549, 536, 537,
	539, 459, 240, 557, 239, 238, 237, 236, 470, 235,
	965, 648, 291, 610, 121, 597, 588, 326, 645, 596,
	286, 3, 587, 314, 595, 606, 650, 608, 247, 35,
	605, 324, 192, 272, 406, 572, 692, 132, 21, 1052,
	775, 622, 143, 869, 773, 694, 790, 152, 1016, 111,
	112, 113, 916, 114, 115, 116, 117, 118, 672, 197,
	915, 122, 568, 216, 215, 656, 677, 110, 834, 217,
	225, 224, 226, 227, 228, 61, 770, 867, 768, 673,
	79, 176, 61, 142, 177, 178, 573, 181, 182, 183,
	185, 670, 189, 120, 691, 569, 676, 767, 769, 659,
	657, 375, 141, 766, 763, 693, 407, 737, 697, 197,
	243, 194, 671, 199, 669, 662, 244, 856, 564, 26,
	421, 698, 301, 301, 170, 171, 26, 25, 197, 683,
	301, 676, 223, 706, 25, 641, 325, 316, 996, 954,
	141, 578, 684, 78, 469, 710, 570, 420, 291, 688,
	323, 680, 1147, 1137, 1132, 721, 707, 696, 1093, 21,
	3, 194, 1131, 35, 724, 1126, 734, 3, 708, 61,
	699, 1112, 61, 61, 1111, 1124, 141, 718, 1103, 269,
	679, 717, 1092, 711, 713, 565, 1079, 1071, 1068, 110,
	315, 168, 169, 172, 173, 375, 1063, 102, 111, 112,
	113, 1060, 114, 115, 116, 117, 118, 1018, 1015, 749,
	329, 330, 1014, 976, 964, 747, 928, 927, 922, 848,
	317, 318, 847, 783, 682, 776, 647, 558, 556, 340,
	159, 246, 142, 301, 1067, 301, 301, 301, 751, 1125,
	301, 755, 756, 1124, 1109, 801, 1009, 758, 789, 109,
	803, 788, 786, 757, 785, 35, 652, 797, 1059, 651,
	796, 921, 1058, 820, 555, 920, 1058, 794, 554, 1148,
	347, 1033, 920, 61, 815, 845, 554, 417, 61, 61,
	804, 415, 808, 158, 197, 833, 1128, 610, 800, 160,
	1104, 1087, 1062, 21, 837, 838, 836, 809, 811, 375,
	419, 608, 842, 422, 423, 61, 870, 799, 1019, 865,
	1006, 924, 865, 161, 784, 864, 141, 752, 868, 561,
	111, 112, 113, 35, 114, 115, 116, 117, 118, 676,
	255, 301, 1150, 301, 301, 301, 875, 874, 1106, 141,
	1089, 866, 843, 1021, 883, 1008, 787, 849, 850, 26,
	754, 413, 262, 141, 623, 61, 1144, 25, 1143, 1130,
	197, 474, 476, 479, 481, 484, 61, 886, 887, 892,
	484, 489, 873, 902, 1129, 489, 489, 901, 888, 496,
	889, 900, 610, 1085, 983, 21, 982, 926, 925, 5,
	3, 750, 1125, 1059, 921, 890, 608, 375, 555, 1151,
	903, 865, 141, 1146, 949, 641, 839, 940, 1120, 641,
	1102, 1049, 301, 1017, 872, 197, 948, 782, 375, 310,
	947, 141, 1141, 1083, 980, 960, 934, 676, 936, 937,
	938, 955, 1097, 686, 967, 923, 61, 61, 1119, 961,
	907, 61, 1101, 1145, 1097, 61, 970, 956, 676, 1116,
	141, 973, 974, 21, 977, 197, 971, 197, 1100, 957,
	1117, 1118, 35, 196, 1099, 1076, 780, 107, 214, 35,
	589, 371, 375, 403, 1047, 370, 372, 402, 986, 998,
	912, 991, 247, 865, 950, 461, 61, 1115, 674, 994,
	1011, 512, 350, 999, 614, 621, 405, 404, 958, 354,
	959, 1005, 676, 813, 1013, 378, 377, 207, 1134, 882,
	978, 1098, 993, 196, 981, 819, 1023, 333, 1020, 327,
	1095, 907, 907, 1098, 604, 141, 716, 61, 806, 807,
	61, 197, 196, 715, 1074, 602, 108, 61, 601, 649,
	61, 1075, 1031, 446, 1077, 447, 448, 911, 1043, 141,
	375, 266, 1048, 985, 61, 933, 35, 1055, 600, 35,
	35, 912, 912, 267, 1066, 265, 266, 197, 599, 1061,
	862, 907, 439, 134, 375, 744, 969, 932, 736, 61,
	676, 1078, 735, 61, 1072, 61, 334, 1080, 61, 61,
	733, 150, 21, 685, 1081, 206, 207, 208, 1084, 21,
	149, 689, 212, 1043, 676, 197, 1043, 1043, 61, 1050,
	975, 912, 907, 61, 61, 1037, 1105, 446, 620, 447,
	448, 449, 907, 792, 793, 61, 1043, 852, 911, 911,
	61, 1043, 1043, 841, 1012, 727, 728, 729, 730, 907,
	1121, 197, 1135, 835, 69, 61, 1138, 1136, 1043, 61,
	832, 446, 912, 447, 448, 449, 441, 806, 807, 444,
	35, 740, 912, 1043, 907, 35, 35, 1043, 907, 61,
	1037, 1149, 1086, 1037, 1037, 1090, 1091, 1153, 911, 912,
	585, 484, 162, 164, 489, 644, 21, 1043, 196, 21,
	21, 485, 35, 1037, 283, 1107, 270, 289, 1037, 1037,
	1113, 1114, 430, 110, 912, 387, 1027, 1000, 912, 617,
	907, 695, 562, 625, 627, 1037, 146, 1127, 446, 911,
	447, 448, 449, 441, 146, 465, 444, 435, 336, 911,
	1037, 145, 1139, 335, 1037, 331, 1142, 103, 462, 463,
	105, 103, 35, 105, 102, 205, 911, 464, 486, 309,
	912, 211, 534, 35, 1037, 70, 1152, 153, 817, 1108,
	1032, 844, 221, 414, 196, 220, 219, 222, 218, 10,
	9, 911, 584, 8, 830, 911, 7, 416, 65, 360,
	295, 197, 840, 294, 300, 302, 274, 277, 1133, 1094,
	21, 1073, 846, 1051, 64, 21, 21, 93, 63, 62,
	67, 110, 59, 66, 197, 221, 230, 229, 220, 219,
	222, 218, 60, 791, 575, 284, 425, 911, 197, 582,
	58, 210, 21, 35, 35, 419, 571, 276, 35, 566,
	563, 617, 35, 6, 111, 112, 113, 20, 114, 115,
	116, 117, 118, 617, 19, 72, 167, 216, 215, 17,
	640, 637, 16, 217, 225, 224, 226, 227, 228, 630,
	483, 634, 15, 14, 364, 617, 11, 197, 18, 13,
	12, 1038, 21, 35, 908, 1036, 617, 906, 500, 498,
	4, 2, 0, 21, 0, 0, 197, 0, 0, 0,
	216, 215, 0, 0, 0, 0, 217, 225, 224, 226,
	227, 228, 0, 0, 0, 339, 0, 0, 0, 0,
	0, 0, 0, 0, 35, 197, 0, 35, 0, 0,
	0, 0, 0, 0, 35, 0, 0, 35, 0, 0,
	0, 0, 111, 112, 113, 196, 114, 115, 116, 117,
	118, 35, 0, 0, 0, 0, 0, 966, 0, 0,
	585, 968, 972, 21, 21, 617, 0, 0, 21, 979,
	0, 0, 21, 0, 85, 0, 35, 0, 0, 0,
	35, 196, 35, 617, 0, 35, 35, 0, 0, 822,
	823, 0, 0, 0, 0, 0, 0, 0, 0, 131,
	197, 0, 0, 0, 0, 35, 0, 0, 0, 0,
	35, 35, 0, 21, 0, 0, 0, 0, 0, 725,
	0, 0, 35, 0, 197, 0, 0, 35, 187, 0,
	0, 0, 221, 230, 229, 220, 219, 222, 218, 0,
	0, 0, 35, 0, 0, 0, 35, 0, 193, 0,
	0, 0, 0, 0, 21, 759, 1034, 21, 0, 0,
	0, 231, 232, 0, 21, 0, 35, 21, 0, 846,
	0, 0, 0, 0, 0, 249, 250, 0, 0, 0,
	0, 21, 0, 0, 0, 0, 0, 1065, 0, 221,
	230, 229, 220, 219, 222, 218, 0, 0, 193, 0,
	0, 0, 0, 0, 131, 0, 21, 1082, 110, 0,
	21, 0, 21, 0, 0, 21, 21, 216, 215, 0,
	0, 110, 187, 217, 225, 224, 226, 227, 228, 0,
	0, 343, 339, 296, 276, 21, 0, 1110, 0, 0,
	21, 21, 0, 0, 0, 0, 296, 276, 0, 0,
	0, 0, 21, 0, 1034, 0, 0, 21, 0, 617,
	0, 0, 0, 0, 0, 0, 0, 342, 891, 0,
	110, 0, 21, 1140, 216, 215, 21, 0, 105, 0,
	217, 225, 224, 226, 227, 228, 0, 0, 361, 871,
	365, 366, 367, 0, 369, 877, 21, 376, 1110, 379,
	380, 381, 382, 383, 384, 385, 0, 0, 0, 187,
	391, 361, 0, 617, 0, 187, 187, 187, 898, 0,
	0, 0, 29, 0, 0, 0, 0, 408, 0, 0,
	0, 0, 904, 187, 0, 88, 0, 418, 0, 111,
	112, 113, 426, 278, 279, 280, 281, 282, 303, 304,
	305, 136, 111, 112, 113, 0, 278, 279, 280, 281,
	282, 303, 304, 305, 440, 0, 0, 0, 0, 0,
	156, 0, 0, 298, 0, 165, 166, 0, 174, 175,
	0, 952, 0, 0, 180, 0, 298, 187, 184, 468,
	188, 0, 190, 191, 0, 0, 198, 0, 0, 0,
	962, 111, 112, 113, 0, 114, 115, 116, 117, 118,
	0, 0, 0, 0, 187, 0, 221, 230, 229, 220,
	219, 222, 218, 0, 110, 0, 0, 0, 0, 984,
	0, 221, 230, 229, 220, 219, 222, 218, 0, 0,
	0, 0, 251, 765, 0, 526, 198, 528, 455, 187,
	221, 230, 229, 220, 219, 222, 218, 0, 0, 0,
	0, 0, 0, 0, 187, 198, 0, 0, 0, 187,
	187, 187, 0, 0, 275, 0, 275, 0, 0, 110,
	0, 0, 275, 0, 275, 0, 275, 0, 418, 0,
	0, 0, 559, 0, 319, 275, 321, 322, 0, 0,
	0, 216, 215, 328, 1030, 120, 0, 217, 225, 224,
	226, 227, 228, 0, 0, 764, 216, 215, 0, 0,
	198, 0, 217, 225, 224, 226, 227, 228, 1054, 0,
	0, 551, 110, 0, 0, 216, 215, 0, 0, 0,
	0, 217, 225, 224, 226, 227, 228, 358, 0, 363,
	339, 0, 0, 0, 0, 111, 112, 113, 120, 114,
	115, 116, 117, 118, 0, 0, 0, 0, 0, 386,
	0, 0, 363, 110, 80, 81, 82, 131, 107, 0,
	102, 105, 103, 104, 0, 74, 0, 0, 0, 409,
	0, 0, 0, 0, 0, 361, 127, 0, 0, 120,
	660, 0, 0, 0, 0, 0, 275, 0, 0, 664,
	111, 112, 113, 0, 114, 115, 116, 117, 118, 275,
	275, 198, 0, 0, 0, 0, 681, 0, 0, 0,
	450, 0, 0, 0, 275, 687, 0, 454, 0, 99,
	0, 0, 0, 100, 626, 460, 0, 108, 0, 426,
	0, 0, 0, 0, 0, 0, 129, 126, 0, 475,
	477, 478, 480, 111, 112, 113, 106, 114, 115, 116,
	117, 118, 275, 0, 709, 187, 198, 0, 198, 198,
	0, 0, 0, 0, 508, 0, 510, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 0, 0,
	0, 0, 128, 0, 111, 112, 113, 0, 114, 115,
	116, 117, 118, 0, 0, 0, 119, 89, 92, 90,
	91, 94, 95, 96, 97, 221, 230, 229, 220, 219,
	222, 218, 86, 87, 364, 0, 761, 101, 73, 392,
	221, 230, 229, 220, 219, 222, 218, 0, 0, 0,
	0, 0, 198, 779, 0, 0, 0, 0, 221, 230,
	229, 220, 219, 222, 218, 0, 586, 275, 590, 0,
	0, 275, 275, 0, 0, 0, 798, 0, 187, 560,
	0, 275, 0, 0, 0, 0, 0, 611, 110, 454,
	0, 613, 198, 0, 198, 586, 0, 0, 624, 586,
	586, 628, 0, 0, 0, 631, 633, 0, 826, 642,
	216, 215, 0, 0, 276, 0, 217, 225, 224, 226,
	227, 228, 0, 0, 935, 216, 215, 0, 0, 418,
	0, 217, 225, 224, 226, 227, 228, 0, 0, 781,
	858, 0, 0, 216, 215, 0, 0, 653, 654, 217,
	225, 224, 226, 227, 228, 633, 363, 658, 386, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 0,
	0, 0, 0, 0, 0, 576, 577, 0, 0, 0,
	0, 884, 0, 110, 80, 81, 82, 0, 107, 0,
	102, 105, 103, 104, 0, 74, 0, 221, 230, 229,
	220, 219, 222, 218, 198, 0, 127, 0, 0, 120,
	221, 230, 229, 220, 219, 222, 218, 586, 0, 111,
	112, 113, 0, 114, 115, 116, 117, 118, 0, 586,
	413, 0, 0, 0, 0, 0, 0, 275, 275, 0,
	0, 0, 198, 0, 0, 0, 946, 0, 0, 99,
	0, 586, 0, 100, 633, 187, 0, 108, 0, 624,
	0, 110, 586, 0, 0, 0, 129, 126, 0, 187,
	0, 187, 0, 110, 79, 204, 106, 0, 198, 0,
	748, 0, 216, 215, 0, 131, 296, 276, 217, 225,
	224, 226, 227, 228, 0, 216, 215, 0, 110, 276,
	0, 217, 225, 224, 226, 227, 228, 0, 187, 0,
	0, 0, 203, 0, 111, 112, 113, 0, 114, 115,
	116, 117, 118, 296, 276, 0, 119, 89, 92, 90,
	91, 94, 95, 96, 97, 0, 586, 78, 0, 0,
	275, 586, 86, 87, 0, 0, 0, 101, 73, 0,
	0, 275, 275, 0, 0, 275, 816, 0, 812, 586,
	426, 0, 0, 0, 0, 586, 586, 0, 0, 0,
	0, 828, 829, 0, 0, 633, 0, 0, 0, 0,
	0, 0, 0, 418, 221, 230, 229, 220, 219, 222,
	218, 0, 111, 112, 113, 110, 278, 279, 280, 281,
	282, 303, 304, 305, 111, 112, 113, 110, 278, 279,
	280, 281, 282, 0, 102, 131, 0, 0, 198, 451,
	0, 0, 0, 0, 0, 0, 298, 0, 0, 111,
	112, 113, 0, 278, 279, 280, 281, 282, 303, 304,
	305, 198, 0, 0, 0, 0, 0, 0, 0, 275,
	275, 0, 0, 0, 0, 198, 0, 0, 0, 0,
	0, 624, 0, 298, 418, 0, 0, 0, 0, 216,
	215, 0, 0, 0, 0, 217, 225, 224, 226, 227,
	228, 0, 0, 0, 0, 110, 80, 81, 82, 0,
	107, 0, 102, 105, 103, 104, 22, 74, 79, 0,
	0, 37, 38, 0, 198, 0, 0, 0, 30, 0,
	0, 120, 0, 31, 46, 0, 32, 0, 0, 0,
	0, 633, 0, 198, 0, 0, 111, 112, 113, 0,
	114, 115, 116, 117, 118, 586, 0, 0, 111, 112,
	113, 0, 114, 115, 116, 117, 118, 0, 0, 0,
	0, 99, 198, 0, 0, 100, 0, 0, 0, 108,
	0, 78, 0, 0, 0, 110, 0, 0, 1040, 1039,
	0, 913, 0, 0, 0, 0, 0, 34, 106, 110,
	41, 39, 40, 36, 42, 0, 0, 0, 0, 586,
	296, 276, 44, 45, 506, 507, 0, 49, 50, 51,
	52, 43, 54, 55, 56, 47, 53, 57, 0, 0,
	0, 914, 0, 0, 33, 48, 111, 112, 113, 0,
	114, 115, 116, 117, 118, 810, 0, 198, 119, 89,
	92, 90, 91, 94, 95, 96, 97, 0, 0, 0,
	0, 0, 0, 0, 86, 87, 1044, 1045, 0, 101,
	73, 198, 0, 0, 0, 0, 0, 0, 110, 80,
	81, 82, 0, 107, 0, 102, 105, 103, 104, 22,
	74, 79, 0, 0, 37, 38, 0, 0, 0, 0,
	0, 30, 1069, 1070, 120, 0, 31, 46, 0, 32,
	0, 0, 0, 0, 0, 0, 111, 112, 113, 0,
	278, 279, 280, 281, 282, 303, 304, 305, 0, 0,
	111, 112, 113, 0, 114, 115, 116, 117, 118, 0,
	0, 0, 0, 0, 99, 110, 0, 410, 100, 0,
	298, 0, 108, 0, 78, 0, 0, 0, 110, 0,
	0, 502, 501, 0, 75, 0, 0, 0, 0, 0,
	34, 106, 0, 41, 39, 40, 36, 42, 0, 0,
	0, 0, 0, 296, 276, 44, 45, 506, 507, 76,
	49, 50, 51, 52, 43, 54, 55, 56, 47, 53,
	57, 0, 0, 0, 0, 0, 0, 33, 48, 111,
	112, 113, 0, 114, 115, 116, 117, 118, 714, 0,
	0, 119, 89, 92, 90, 91, 94, 95, 96, 97,
	0, 0, 0, 0, 0, 0, 0, 86, 87, 0,
	0, 0, 101, 73, 110, 80, 81, 82, 0, 107,
	0, 102, 105, 103, 104, 22, 74, 79, 0, 0,
	37, 38, 0, 0, 0, 0, 0, 30, 0, 0,
	120, 0, 31, 46, 0, 32, 111, 112, 113, 0,
	114, 115, 116, 117, 118, 0, 0, 0, 0, 111,
	112, 113, 0, 278, 279, 280, 281, 282, 303, 304,
	305, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	99, 110, 0, 387, 100, 0, 0, 0, 108, 0,
	78, 0, 0, 298, 110, 0, 0, 910, 909, 0,
	913, 0, 0, 0, 0, 0, 34, 106, 0, 41,
	39, 40, 36, 42, 0, 0, 0, 0, 0, 296,
	276, 44, 45, 0, 0, 0, 49, 50, 51, 52,
	43, 54, 55, 56, 47, 53, 57, 0, 0, 0,
	914, 0, 0, 33, 48, 111, 112, 113, 0, 114,
	115, 116, 117, 118, 712, 0, 0, 119, 89, 92,
	90, 91, 94, 95, 96, 97, 0, 0, 0, 0,
	0, 0, 0, 86, 87, 0, 0, 0, 101, 73,
	110, 80, 81, 82, 0, 107, 0, 102, 105, 103,
	104, 22, 74, 79, 0, 0, 37, 38, 0, 0,
	0, 0, 0, 30, 0, 0, 120, 0, 31, 46,
	0, 32, 111, 112, 113, 0, 114, 115, 116, 117,
	118, 0, 0, 0, 0, 111, 112, 113, 0, 278,
	279, 280, 281, 282, 303, 304, 305, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 99, 0, 0, 0,
	100, 0, 0, 0, 108, 0, 78, 0, 0, 298,
	0, 0, 0, 24, 23, 0, 75, 0, 0, 0,
	0, 0, 34, 106, 0, 41, 39, 40, 36, 42,
	0, 0, 0, 0, 0, 0, 0, 44, 45, 521,
	0, 76, 49, 50, 51, 52, 43, 54, 55, 56,
	47, 53, 57, 0, 0, 0, 0, 0, 0, 33,
	48, 111, 112, 113, 0, 114, 115, 116, 117, 118,
	0, 0, 0, 119, 89, 92, 90, 91, 94, 95,
	96, 97, 221, 230, 229, 220, 219, 222, 218, 86,
	87, 0, 0, 0, 101, 73, 110, 80, 81, 82,
	0, 107, 0, 102, 105, 103, 104, 0, 74, 79,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 127,
	0, 0, 120, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 110, 80, 81, 82, 0, 107, 0,
	102, 105, 103, 104, 0, 74, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 127, 0, 0, 120,
	0, 0, 99, 0, 0, 0, 100, 216, 215, 0,
	108, 0, 78, 217, 225, 224, 226, 227, 228, 129,
	126, 0, 0, 0, 0, 0, 0, 0, 0, 106,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 99,
	0, 0, 0, 100, 0, 0, 0, 108, 0, 0,
	0, 0, 0, 0, 0, 0, 129, 126, 0, 0,
	0, 0, 0, 0, 0, 128, 106, 111, 112, 113,
	0, 114, 115, 116, 117, 118, 0, 0, 0, 119,
	89, 92, 90, 91, 94, 95, 96, 97, 0, 0,
	0, 0, 0, 0, 0, 86, 87, 0, 0, 0,
	101, 73, 128, 0, 111, 112, 113, 0, 114, 115,
	116, 117, 118, 0, 0, 0, 119, 89, 92, 90,
	91, 94, 95, 96, 97, 221, 661, 229, 220, 219,
	222, 218, 86, 87, 364, 0, 0, 101, 73, 110,
	80, 81, 82, 0, 107, 0, 102, 105, 103, 104,
	0, 74, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 127, 0, 0, 120, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 110, 80, 81, 82,
	0, 107, 0, 102, 105, 103, 104, 0, 74, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 127,
	0, 0, 120, 0, 0, 99, 0, 0, 0, 100,
	216, 215, 0, 108, 214, 0, 217, 225, 224, 226,
	227, 228, 129, 126, 0, 0, 0, 0, 0, 0,
	0, 0, 106, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 99, 0, 0, 0, 100, 0, 0, 0,
	108, 0, 0, 0, 0, 0, 0, 0, 0, 129,
	126, 0, 0, 0, 0, 0, 0, 0, 128, 106,
	111, 112, 113, 0, 114, 115, 116, 117, 118, 0,
	0, 0, 119, 89, 92, 90, 91, 94, 95, 96,
	97, 0, 0, 0, 0, 0, 0, 0, 86, 87,
	0, 0, 0, 101, 73, 128, 0, 111, 112, 113,
	0, 114, 115, 116, 117, 118, 0, 0, 0, 119,
	89, 92, 90, 91, 94, 95, 96, 97, 221, 525,
	229, 220, 219, 222, 218, 86, 87, 0, 0, 0,
	101, 73, 110, 80, 81, 82, 0, 107, 0, 102,
	105, 103, 104, 0, 74, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 127, 0, 0, 120, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 110,
	80, 81, 82, 0, 107, 0, 102, 105, 103, 104,
	0, 74, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 127, 0, 0, 591, 0, 0, 99, 0,
	0, 0, 100, 216, 215, 0, 108, 0, 0, 217,
	225, 224, 226, 227, 228, 129, 126, 0, 0, 0,
	0, 0, 0, 0, 0, 106, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 99, 0, 0, 0, 100,
	0, 0, 0, 108, 0, 0, 0, 0, 0, 0,
	0, 0, 129, 126, 0, 0, 0, 0, 0, 0,
	0, 128, 106, 111, 112, 113, 0, 114, 115, 116,
	117, 118, 0, 0, 0, 119, 89, 92, 90, 91,
	94, 95, 96, 97, 0, 0, 0, 0, 0, 0,
	0, 86, 87, 0, 0, 0, 101, 123, 128, 0,
	111, 112, 113, 0, 114, 115, 116, 117, 118, 0,
	0, 0, 119, 89, 92, 90, 91, 94, 95, 96,
	97, 0, 0, 0, 0, 0, 0, 0, 86, 87,
	0, 0, 0, 101, 73, 110, 80, 341, 82, 0,
	107, 0, 102, 105, 103, 104, 0, 74, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 127, 0,
	0, 120, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 99, 0, 0, 0, 100, 0, 0, 0, 108,
	0, 0, 0, 0, 0, 0, 0, 0, 129, 126,
	0, 0, 0, 0, 0, 0, 0, 0, 106, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 128, 0, 111, 112, 113, 0,
	114, 115, 116, 117, 118, 0, 0, 0, 119, 89,
	92, 90, 91, 94, 95, 96, 97, 0, 0, 0,
	0, 0, 0, 0, 86, 87, 0, 0, 0, 101,
	73,
}

var yyPact = [...]int{
	3056, -1000, 333, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 3628, 3462, -1000, -1000, 1008, 122, 1186,
	281, 1044, 1035, 358, 2473, -1000, 666, 1208, 1204, 2645,
	2645, 567, 2645, 3462, -1000, -1000, 3462, 3462, 1636, 3462,
	3462, 3462, 3462, 3462, 3462, -1000, 2645, 2645, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 354, -1000,
	-1000, -1000, -1000, 3222, -1000, 2249, 1219, 1010, 1051, 869,
	-1000, -1000, -1000, -1000, -1000, 2383, 3462, 3462, -73, 320,
	318, 317, 316, -1000, 315, 313, 298, 297, 434, 135,
	3462, 3462, -1000, -1000, -1000, -1000, 2645, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 282,
	-82, 3056, 718, 3222, -1000, -1000, 280, 275, 274, 3462,
	741, 2383, -1000, 994, 995, 1008, 1186, 1151, 2339, 1149,
	1277, -1000, 121, 1178, 1154, 1213, 1587, 3462, 2339, 811,
	2339, -1000, 869, 38, 345, -1000, 573, -1000, 2645, 2154,
	2645, 2645, 468, 454, -1000, 937, -1000, 2645, -1000, -1000,
	-1000, -1000, 3462, 3462, 1197, 27, 935, 1023, 1195, -1000,
	1190, -1000, -1000, 69, -73, -1000, -1000, 1749, -73, -1000,
	-1000, 3831, 3462, 1431, 198, 196, 197, 217, 1178, 656,
	17, 901, 1213, 274, -1000, -1000, 911, 911, 911, -1000,
	35, 2645, -1000, 3259, -1000, 3462, 3462, 3462, 888, 3462,
	880, 64, 3462, 917, 3462, 3462, 3462, 3462, 3462, 3462,
	3462, -1000, -1000, 2957, 3425, 3462, 1939, 869, 869, 869,
	3462, 3462, 3462, 64, 64, 882, 908, -1000, -1000, 1171,
	-1000, 437, 3462, 2791, -1000, 3056, 196, 193, 3462, 740,
	668, 664, 3462, 529, 501, 3462, 3462, 3462, 994, 1178,
	2339, 1162, 34, -1000, -1000, -1000, -1000, 271, -1000, -1000,
	-1000, -1000, -1000, 2339, 1587, 1189, 32, 1154, 1006, 3462,
	-1000, 31, -1000, 48, 2461, -1000, -1000, -1000, 2327, -1000,
	-1000, 1790, 269, -1000, -1000, -1000, 188, -1000, 312, 2645,
	891, 1185, 3462, 1213, 3462, 526, 319, 268, 266, -1000,
	-1000, -1000, -1000, 3462, 3462, 3462, 3462, 3462, 1146, -1000,
	-1000, 1223, 3462, 3462, 1211, 1211, 2339, 3462, 3462, 3462,
	-1000, 3462, 2383, -1000, -1000, -1000, -1000, 2724, 2645, 1213,
	2645, 58, 900, 217, -1000, 217, 217, 1051, 270, -1000,
	23, 3141, -1000, -60, -1000, 61, 6, 6, 938, 3547,
	3462, 64, 3462, -1000, 3222, -1000, 6, 64, 64, 288,
	288, -1000, -1000, -1000, 387, 1171, -1000, -1000, 185, 3462,
	181, 1214, -1000, 180, 3462, 3259, 3462, 179, 174, 173,
	-1000, -1000, 64, 192, 192, 192, 888, -1000, 1730, -1000,
	-1000, 655, -1000, 3462, 613, 3056, 612, 3462, 2057, 707,
	1173, 561, 489, 429, -1000, 22, 2196, 523, 1154, 169,
	1898, 2339, 3665, 177, 1154, 1587, 2154, 1006, 1001, 990,
	2383, 964, 961, 948, 1042, 126, -1000, -1000, -1000, -1000,
	-1000, 2645, 77, 1790, -1000, 2645, 3462, -1000, 257, 1898,
	226, 905, 665, 1845, 1898, 2645, 172, -1000, 2383, 394,
	2645, 121, 189, 2645, -1000, -73, -1000, -73, -73, -1000,
	-73, -1000, -1000, 20, 1137, 1213, -1000, -1000, -1000, 16,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 611, 330, -1000,
	-1000, 3628, 3462, -1000, -1000, -1000, -1000, -1000, 645, -1000,
	642, 2645, 2645, 921, -1000, -1000, 921, -1000, 250, 2645,
	3259, 2645, 1179, -1000, -1000, 3462, 3344, -1000, 6, -1000,
	-1000, 485, 170, -1000, 3462, -1000, 157, 146, 144, 143,
	484, 461, 428, 896, -1000, 168, -1000, 248, -1000, -1000,
	560, 3462, 609, 663, 3056, 3462, 826, -1000, -1000, 2383,
	3462, 3056, -1000, 3462, -1000, -1000, 436, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 3462, 389, -1000, -1000, 1172, 1006,
	64, 543, -1000, 1178, 13, 265, -70, -1000, -43, 12,
	-73, -82, 241, 1898, -1000, 1154, -1000, 1001, -1000, 3462,
	3462, 2970, 2804, 959, -1000, 952, 948, -1000, 1143, 135,
	11, -1000, -1000, -1000, 10, 1898, 142, 7, 2645, 121,
	-1000, -1000, 1078, 2645, 1029, -1000, 1898, 1019, 1015, 477,
	-1000, -1000, 141, -3, -1000, 1113, 140, -6, -1000, -1000,
	-10, 1014, -50, 3462, 2645, -1000, 3462, 781, 2724, 705,
	739, 2724, 2724, 639, 633, 121, 139, -1000, -1000, -1000,
	1171, 3462, 238, 474, 1715, 473, 467, 448, 446, 232,
	231, 388, 228, 384, 64, 137, -19, -1000, 3462, -1000,
	865, 2039, 809, 608, -1000, 702, -1000, 2209, 735, 489,
	979, -1000, 391, -1000, 1066, -1000, 1001, -1000, 131, 1154,
	1898, 3462, -1000, 3462, 2154, 1898, 124, -1000, 1008, 2383,
	-1000, 968, 135, 1076, 135, 2631, 2364, 929, -48, 126,
	3462, 117, 933, 1898, 116, -1000, -1000, -1000, -1000, 1898,
	1898, 114, -58, 3462, 112, 2645, 3462, 225, 1102, 2645,
	419, 1095, 1213, 1213, 3462, 1085, 1213, -1000, -1000, -1000,
	-1000, -1000, 2724, 662, 3462, 607, 604, 2724, 2724, 111,
	1079, 1171, 488, 223, -1000, 3462, 222, 221, 220, 1004,
	216, 488, 488, 447, 488, 413, -1000, -1000, 64, 1488,
	-1000, -1000, -1000, 806, 3056, -1000, -1000, 3462, 436, -1000,
	-1000, -1000, -1000, -1000, 1008, 136, -1000, -1000, 2383, 110,
	-52, 109, 927, 994, -1000, -1000, 3462, 214, 947, 1076,
	135, 968, 135, 1574, 126, -1000, -77, -54, 134, 213,
	-1000, 1070, -1000, -1000, 1078, 2645, 2383, -1000, -1000, -73,
	-1000, 488, 121, -1000, 2890, 411, -1000, -1000, -1000, 1014,
	-1000, 403, 108, 652, 603, 2724, 699, 778, 777, 602,
	601, -1000, 208, 107, -1000, 1012, 987, 488, 2024, 488,
	488, 488, 207, 488, 106, 1008, 94, 204, 90, 202,
	-1000, 3462, -1000, 789, -1000, 994, 64, -1000, -1000, -1000,
	3462, 133, 201, 521, 2383, 2645, -1000, -1000, 947, -1000,
	968, 135, -1000, -1000, 3462, -1000, 3462, 64, -1000, 1898,
	121, -1000, -1000, 89, -1000, 599, 329, -1000, -1000, 3628,
	3462, -1000, -1000, 2249, 3462, 2890, 2890, 1062, 598, 659,
	2724, 3462, 817, -1000, 2724, -1000, -1000, 776, 774, 121,
	-1000, -1000, 985, 3462, 88, -1000, 87, 85, 81, 1008,
	80, -1000, -1000, 488, -1000, 488, 258, -1000, 520, -1000,
	76, 64, -1000, 1898, 1168, 73, -1000, -1000, 72, 71,
	-1000, 68, -1000, -1000, -1000, 2890, 698, 734, 632, 9,
	899, 1213, -1000, 597, 593, 399, 805, 592, -1000, 696,
	-1000, 732, -1000, -1000, 67, 3462, -1000, -1000, -1000, -1000,
	-1000, 66, -1000, 51, 47, -1000, 1167, -1000, -1000, 42,
	-1000, -1000, -1000, -1000, 128, -1000, 2890, 658, 3462, 2551,
	2645, 2645, 26, 883, -1000, -1000, 2890, -1000, 803, 2724,
	-1000, 3462, -1000, 382, -1000, -1000, -1000, -1000, 84, 64,
	-1000, 649, 586, 2890, 680, 581, 296, -1000, -1000, 3628,
	3462, -1000, -1000, -1000, 620, 574, 2645, 2645, 572, -1000,
	785, -1000, 939, 64, -1000, -1000, 571, 653, 2890, 3462,
	816, -1000, 2890, 773, 2551, 679, 729, 2551, 2551, 568,
	544, -1000, -1000, -1000, 918, 861, 855, 836, -1000, 802,
	563, -1000, 678, -1000, 727, -1000, -1000, 2551, 631, 3462,
	559, 556, 2551, 2551, 895, 846, -1000, 857, 832, -1000,
	-1000, -1000, -1000, 800, 2890, -1000, 3462, 630, 550, 2551,
	674, 764, 749, 547, 539, 906, -1000, -1000, -1000, -1000,
	-1000, 784, 538, 562, 2551, 3462, 815, -1000, 2551, -1000,
	-1000, 748, 746, -1000, 839, -1000, -1000, 795, 537, -1000,
	657, -1000, 721, -1000, -1000, -1000, -1000, 791, 2551, -1000,
	3462, -1000, 783, -1000,
}

var yyPgo = [...]int{
	0, 67, 69, 15, 87, 85, 18, 1361, 52, 22,
	44, 1360, 1359, 1358, 1357, 192, 125, 1355, 1354, 1351,
	1350, 1349, 1348, 1346, 58, 27, 32, 1343, 1342, 1340,
	51, 1332, 33, 1331, 1330, 31, 35, 1329, 1326, 1325,
	1324, 1317, 869, 1313, 75, 91, 1692, 522, 66, 40,
	57, 50, 21, 20, 28, 1310, 1309, 41, 1306, 37,
	465, 1301, 76, 1300, 73, 72, 729, 1444, 517, 56,
	30, 7, 10, 1296, 1294, 1293, 0, 1292, 71, 1283,
	1282, 1280, 83, 1279, 1278, 1277, 1274, 23, 48, 17,
	1273, 1271, 6, 1269, 1268, 63, 1267, 1266, 1265, 1264,
	81, 62, 70, 1263, 47, 34, 61, 1260, 38, 1259,
	1258, 3, 46, 1257, 19, 24, 42, 68, 25, 59,
	1256, 1253, 1252, 36, 1250, 1249, 26, 55, 13, 14,
	5, 9, 4, 2, 43, 1243, 16, 1241, 11, 1240,
	8, 1239, 1705, 142, 12, 387, 1237, 79, 1124, 1235,
	77, 82, 64, 65, 54, 60, 84, 1231, 39, 612,
	1229,
}

var yyR1 = [...]int{
	0, 1, 1, 1, 2, 2, 3, 3, 4, 4,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 6, 6,
	7, 7, 8, 8, 8, 8, 8, 9, 9, 10,
	10, 12, 12, 11, 11, 11, 11, 11, 13, 13,
	13, 13, 13, 13, 14, 14, 15, 15, 15, 15,
	15, 16, 16, 17, 17, 18, 18, 18, 18, 18,
	19, 19, 19, 19, 19, 19, 20, 20, 20, 20,
	21, 21, 21, 21, 21, 22, 22, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 24, 24, 25,
	25, 26, 26, 26, 26, 26, 27, 27, 27, 27,
	27, 27, 27, 28, 28, 28, 28, 29, 29, 30,
	30, 31, 31, 31, 31, 32, 33, 33, 34, 35,
	35, 36, 36, 36, 37, 37, 37, 37, 37, 38,
	38, 38, 38, 38, 38, 38, 39, 39, 39, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 41, 41, 41, 42, 42, 42, 42,
	43, 43, 43, 43, 44, 44, 44, 44, 45, 45,
	46, 47, 48, 48, 49, 49, 50, 50, 51, 51,
	52, 52, 53, 53, 53, 54, 54, 54, 55, 55,
	56, 56, 57, 57, 57, 58, 58, 58, 59, 59,
	60, 60, 61, 61, 62, 62, 63, 63, 63, 63,
	63, 64, 65, 66, 66, 66, 66, 66, 67, 67,
	67, 68, 68, 68, 68, 68, 68, 68, 68, 68,
	68, 68, 68, 68, 68, 68, 68, 68, 68, 69,
	70, 70, 70, 71, 71, 72, 72, 73, 73, 74,
	74, 74, 75, 75, 76, 77, 78, 78, 78, 79,
	79, 79, 79, 79, 79, 79, 79, 79, 79, 79,
	79, 79, 79, 79, 79, 79, 79, 79, 80, 80,
	80, 80, 80, 80, 80, 81, 81, 81, 81, 82,
	82, 83, 83, 83, 83, 83, 83, 83, 83, 84,
	84, 84, 84, 84, 84, 85, 85, 86, 86, 86,
	86, 86, 86, 86, 86, 86, 86, 86, 86, 87,
	88, 88, 89, 89, 90, 90, 91, 91, 91, 92,
	92, 92, 93, 93, 94, 94, 95, 95, 96, 96,
	96, 96, 96, 98, 98, 98, 97, 97, 97, 97,
	99, 99, 99, 99, 100, 100, 103, 103, 104, 104,
	104, 105, 105, 105, 105, 106, 106, 106, 106, 106,
	106, 106, 107, 107, 107, 107, 107, 107, 107, 107,
	107, 107, 108, 108, 109, 109, 109, 109, 110, 111,
	111, 112, 112, 113, 113, 114, 114, 115, 115, 116,
	116, 117, 117, 101, 101, 102, 102, 118, 118, 119,
	119, 120, 120, 120, 120, 121, 122, 123, 123, 124,
	124, 124, 124, 124, 124, 124, 124, 125, 125, 126,
	126, 127, 127, 128, 128, 129, 129, 130, 130, 131,
	131, 132, 132, 133, 133, 134, 134, 135, 135, 136,
	136, 137, 137, 138, 138, 139, 139, 140, 140, 141,
	141, 142, 142, 142, 142, 142, 142, 142, 142, 142,
	143, 144, 144, 145, 146, 146, 147, 147, 148, 149,
	150, 151, 151, 152, 152, 153, 153, 154, 154, 155,
	155, 155, 156, 156, 157, 157, 158, 158, 159, 159,
	160, 160,
}

var yyR2 = [...]int{
	0, 0, 1, 3, 0, 3, 0, 3, 0, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 6, 8, 8, 9, 9, 1, 1, 1,
	2, 1, 1, 7, 8, 6, 1, 1, 7, 8,
	6, 1, 1, 1, 1, 1, 6, 8, 8, 9,
	9, 1, 2, 1, 1, 7, 8, 6, 1, 1,
	7, 8, 6, 1, 1, 1, 2, 2, 1, 2,
	4, 4, 4, 4, 2, 1, 1, 7, 9, 6,
	6, 8, 5, 7, 7, 7, 7, 1, 3, 1,
	3, 0, 1, 1, 2, 2, 5, 5, 2, 4,
	2, 3, 5, 6, 8, 5, 3, 1, 3, 1,
	3, 4, 2, 4, 3, 1, 1, 3, 3, 1,
	3, 1, 1, 3, 9, 10, 10, 12, 3, 0,
	1, 1, 1, 1, 2, 2, 5, 6, 3, 4,
	4, 4, 4, 4, 4, 2, 2, 2, 2, 4,
	4, 2, 2, 2, 4, 1, 2, 2, 4, 2,
	2, 1, 2, 2, 3, 4, 3, 5, 4, 6,
	8, 10, 9, 11, 5, 4, 4, 4, 1, 1,
	3, 2, 0, 2, 0, 2, 0, 3, 0, 2,
	0, 3, 1, 6, 5, 0, 1, 2, 1, 1,
	0, 1, 1, 1, 1, 0, 1, 1, 0, 3,
	0, 2, 6, 9, 1, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 3, 3, 3, 1, 1,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 1, 1,
	3, 1, 6, 1, 3, 1, 3, 2, 4, 0,
	1, 1, 1, 1, 3, 3, 3, 1, 6, 3,
	3, 3, 3, 4, 4, 5, 6, 6, 3, 4,
	4, 3, 4, 4, 4, 4, 4, 2, 3, 3,
	3, 3, 3, 2, 2, 3, 3, 2, 2, 0,
	1, 4, 4, 6, 8, 3, 4, 4, 4, 5,
	5, 5, 5, 5, 1, 5, 10, 8, 9, 9,
	9, 9, 9, 9, 8, 8, 10, 8, 10, 2,
	1, 5, 0, 3, 2, 5, 2, 2, 2, 2,
	2, 2, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 4, 6, 6, 8,
	6, 8, 6, 8, 1, 1, 1, 1, 1, 2,
	3, 1, 2, 3, 4, 1, 2, 3, 1, 1,
	1, 3, 4, 5, 6, 5, 6, 5, 6, 7,
	6, 7, 2, 4, 1, 3, 1, 3, 5, 0,
	1, 4, 5, 0, 2, 1, 3, 1, 3, 1,
	3, 1, 3, 1, 3, 1, 3, 1, 3, 1,
	3, 6, 9, 5, 8, 7, 3, 1, 3, 10,
	13, 9, 12, 9, 12, 8, 11, 5, 6, 4,
	5, 0, 2, 4, 5, 0, 2, 4, 5, 0,
	2, 4, 5, 0, 2, 4, 5, 0, 2, 4,
	5, 0, 2, 4, 5, 0, 2, 4, 5, 0,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 3, 1, 3, 1, 3, 1, 1,
	1, 0, 1, 0, 1, 0, 1, 0, 1, 1,
	1, 1, 0, 1, 0, 1, 0, 1, 1, 1,
	0, 3,
}

var yyChk = [...]int{
	-1000, -1, -7, -5, -11, -42, -43, -120, -121, -124,
	-125, -23, -20, -21, -27, -28, -31, -37, -22, -40,
	-41, -68, 15, 88, 87, -8, -10, -44, -60, -46,
	27, 32, 35, 133, 96, -145, 102, 20, 21, 100,
	101, 99, 103, 120, 111, 112, 33, 124, 134, 116,
	117, 118, 119, 125, 121, 122, 123, 126, -63, -80,
	-77, -76, -83, -84, -86, -110, -79, -81, -143, -148,
	-149, -150, -39, 169, 16, 90, 115, -45, 80, 17,
	5, 6, 7, -64, -65, -67, 163, 164, -142, 148,
	150, 151, 149, -85, 152, 153, 154, 155, -70, 70,
	74, 168, 11, 13, 14, 12, 97, 9, 78, -66,
	4, 135, 136, 137, 139, 140, 141, 142, 143, 147,
	30, 161, -68, 169, -76, -145, 88, 27, 133, 87,
	-111, -67, -68, -52, 45, -44, -46, 24, 19, 27,
	22, -76, 169, -47, -48, 25, 18, 169, 25, 36,
	36, -147, 169, -146, -143, -147, -142, -143, 97, 44,
	103, 127, -148, -150, -148, -142, -142, -38, 104, 105,
	37, 38, 106, 107, -142, -142, -68, -68, -68, -150,
	-142, -68, -68, -68, -142, -68, -115, -67, -142, -68,
	-142, -142, 158, -67, -68, -115, -42, -60, -46, -68,
	-143, -144, -9, 133, 96, 6, 65, 66, 67, -62,
	-61, -157, 31, -151, 79, 157, 156, 162, 77, 75,
	74, 71, 76, -159, 164, 163, 165, 166, 167, 73,
	72, -67, -67, 172, 169, 169, 169, 169, 169, 169,
	169, 169, 169, 156, 162, -152, -159, 74, -76, -67,
	-67, -142, 169, 172, -1, 92, -115, -82, 169, -111,
	-134, -112, 91, -53, -59, 51, 52, 48, -52, -47,
	25, -102, -100, -95, -97, -142, 30, -96, 139, 140,
	141, 142, 143, 25, 18, -101, -95, -48, -49, 23,
	-144, -143, -117, -106, -103, -107, 29, -104, 169, -100,
	-99, -76, -98, 144, 145, 146, -82, -115, -100, -160,
	88, -100, -151, 171, 158, 97, 44, 127, 128, -142,
	-95, -142, -142, 162, 43, 162, 43, 62, -142, -68,
	-68, 18, 62, 62, 43, 18, 18, 171, 62, 171,
	-68, 6, -67, 170, 170, 170, 170, 94, 71, 171,
	71, -143, -144, -156, 68, -156, -156, 171, -142, -119,
	-109, -67, -69, -142, 165, -67, -67, -67, -152, -67,
	75, 71, 76, -70, 169, -76, -67, 69, 68, -67,
	-67, -67, -67, -67, -67, -67, -142, 6, -82, -151,
	-82, -67, 170, -119, -151, -151, -151, -82, -82, -82,
	-70, -70, 75, 71, 69, 68, 77, 149, -67, -142,
	6, -1, 170, 91, -135, 93, -113, 93, -67, -68,
	98, 99, -68, -68, -72, -73, -67, -53, -48, -100,
	20, 171, 169, -100, -117, 18, 171, -49, -50, 46,
	-67, 60, -153, -155, 63, 171, 55, 57, 58, 59,
	-142, 28, -106, -76, -142, 28, 169, 170, 62, 169,
	-142, 74, 33, 34, 42, 20, -82, -147, -67, 98,
	169, 28, 169, 169, -68, -142, -68, -142, -142, -68,
	-142, -68, -30, -29, -68, 25, 5, -30, -116, -68,
	-150, -150, -100, -116, -116, -115, -68, -2, -12, -5,
	-13, 88, 87, -8, -10, -6, 113, 114, -142, -144,
	-142, 71, 71, -45, -44, -45, -45, -62, 28, 169,
	171, 28, 172, -64, -65, 72, -67, -70, -67, -70,
	-70, 170, -82, 170, 18, 170, -82, -82, -69, -82,
	170, 170, 170, -70, -78, 169, -76, 147, -78, -78,
	-152, 171, -127, -126, 93, 89, 95, -1, 95, -67,
	92, 92, 19, -55, 37, 104, -56, -57, 53, 86,
	137, -58, 86, 137, 171, -74, 49, 50, 98, -49,
	26, 169, -42, -123, -122, -66, -142, -102, -95, -68,
	-142, 30, 62, 169, -49, -117, -101, -50, -51, 47,
	48, 54, 54, -154, 56, -153, -155, -105, -106, 64,
	-104, -142, 170, -142, -68, 169, -114, -66, 169, -158,
	28, 70, -24, 169, -142, -66, 169, -66, -142, 170,
	-42, -142, -118, -142, -42, 170, -36, -33, -35, -32,
	-34, -143, -142, 171, 28, -144, 171, 95, 161, -68,
	-111, 94, 94, -142, -142, 169, -118, -119, -142, -69,
	-67, 72, 110, 170, -67, 170, 170, 170, 170, 110,
	110, 131, 110, 131, 72, -71, -70, -76, 169, 100,
	71, -67, 95, -127, -1, -68, 87, -67, -1, -68,
	-54, 138, 80, -72, 136, 19, -50, -71, -114, -48,
	171, 162, 170, 171, 171, 169, -114, -49, -51, -67,
	-115, -106, 64, -106, 64, 54, 54, -154, -104, 171,
	171, -114, 170, 171, -118, -42, -26, 37, 38, 39,
	40, -25, -24, 41, -114, 43, 43, 110, 170, 171,
	28, 170, 171, 171, 41, 170, 171, -30, -142, -116,
	90, -2, 92, -136, 91, -2, -2, 94, 94, -42,
	170, -67, 169, 110, 170, 98, 110, 110, 110, 132,
	110, 169, 169, 136, 169, 136, -70, 170, 171, -67,
	81, 170, 88, 95, 92, -112, -134, 91, -57, -59,
	135, -75, 37, 38, -51, 170, -49, -123, -67, -82,
	-95, -114, 170, -52, -104, -108, 61, 62, -104, -106,
	64, -106, 64, 54, 171, -105, -142, -68, 170, 62,
	-114, 170, -66, -66, 170, 171, -67, 170, -142, -142,
	-68, 169, 28, -118, 129, 28, -32, -35, -35, -143,
	-68, 28, -36, -2, -137, 93, -68, 95, 95, -2,
	-2, 170, 28, -88, -87, -89, 109, 169, -67, 169,
	169, 169, 46, 169, -87, -89, -88, 110, -87, 110,
	-71, 171, 88, -1, -54, -52, 26, -42, 170, 170,
	171, 170, 62, -53, -67, 169, -108, -108, -104, -104,
	-106, 64, -105, 170, 171, 170, 171, 26, -42, 169,
	-158, -26, -25, -88, -42, -3, -14, -5, -18, 88,
	87, -15, -16, 90, 130, 129, 129, 170, -129, -128,
	93, 89, 95, -2, 92, 90, 90, 95, 95, 169,
	170, -52, 45, 48, -88, 170, -88, -88, -88, 169,
	-87, 170, 170, 169, 170, 169, -67, -126, -53, -71,
	-82, 26, -42, 169, 98, -118, -108, -104, -82, -82,
	-71, -114, -42, 170, 95, 161, -68, -111, -68, -143,
	-144, -9, -68, -3, -3, 28, 95, -129, -2, -68,
	87, -2, 90, 90, -42, 48, -115, 170, 170, 170,
	170, -52, 170, -88, -87, 170, 98, 170, -71, -114,
	19, 170, 170, 170, 170, -3, 92, -138, 91, 94,
	71, 71, -143, -144, 95, 95, 129, 88, 95, 92,
	-136, 91, 170, -72, 170, 170, 170, 19, 170, 26,
	-42, -3, -139, 93, -68, -4, -17, -5, -19, 88,
	87, -15, -16, -6, -142, -142, 71, 71, -3, 88,
	-2, -90, 137, 26, -42, -71, -131, -130, 93, 89,
	95, -3, 92, 95, 161, -68, -111, 94, 94, -142,
	-142, 95, -128, -91, 75, 82, 6, 85, -71, 95,
	-131, -3, -68, 87, -3, 90, -4, 92, -140, 91,
	-4, -4, 94, 94, -93, 82, -92, 6, 85, 83,
	83, 86, 88, 95, 92, -138, 91, -4, -141, 93,
	-68, 95, 95, -4, -4, 72, 83, 83, 84, 86,
	88, -3, -133, -132, 93, 89, 95, -4, 92, 90,
	90, 95, 95, -94, 82, -92, -130, 95, -133, -4,
	-68, 87, -4, 90, 90, 84, 88, 95, 92, -140,
	91, 88, -4, -132,
}

var yyDef = [...]int{
	-2, -2, 2, 30, 31, 10, 11, 12, 13, 14,
	15, 16, 17, 18, 19, 20, 21, 22, 23, 24,
	25, -2, 27, 0, 409, 46, 47, -2, 0, 192,
	0, 0, 0, 0, 0, -2, 0, 0, 0, 0,
	0, 139, 0, 0, 85, 86, 0, 0, 0, 0,
	0, 0, 0, 165, 0, 171, 0, 0, 241, 242,
	243, -2, 245, 246, 247, 248, 249, 250, 251, 253,
	254, 255, 256, 0, 258, 0, 39, 0, 514, 501,
	226, 227, 228, 229, 230, 0, 0, 0, 233, 0,
	0, 0, 0, 324, 0, 0, 0, 0, 503, 0,
	0, 0, 490, 498, 499, 500, 0, 231, 232, 238,
	481, 482, 483, 484, 485, 486, 487, 488, 489, 0,
	0, -2, 239, 309, 244, 252, 0, 0, 0, 409,
	0, 410, 239, 218, 0, -2, 192, 0, 0, 0,
	0, 189, 0, 192, 194, 0, 0, 309, 0, 520,
	0, 76, 501, 496, 494, 77, 0, 79, 0, 0,
	0, 0, 0, 0, 84, 108, 110, 0, 140, 141,
	142, 143, 0, 0, 0, -2, -2, 239, 239, 155,
	167, -2, -2, -2, -2, -2, 166, 417, -2, -2,
	172, 173, 0, 0, 239, 0, 0, 0, 192, 239,
	251, 0, 0, 37, 38, 40, 512, 512, 512, 221,
	224, 0, 515, 0, 502, 0, 518, 519, 503, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 303, 304, 0, 309, 309, 0, 501, 501, 501,
	309, 309, 309, 518, 519, 0, 0, 504, 297, 307,
	308, 0, 0, 0, 3, -2, 0, 0, 309, 0,
	467, 413, 0, 176, 202, 0, 0, 0, 218, 192,
	0, 0, 425, 374, 375, 356, 357, 0, -2, -2,
	-2, -2, -2, 0, 0, 0, 423, 194, 196, 0,
	191, 491, 193, -2, 385, 388, 389, 390, 0, 376,
	377, 378, 0, 363, 364, 365, 0, 310, 0, 0,
	0, 0, 309, 0, 0, 0, 0, 0, 0, 111,
	116, 124, 138, 0, 0, 0, 0, 0, 0, -2,
	-2, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	-2, 227, 493, 240, 257, 260, 274, -2, 0, 0,
	0, 0, 0, 0, 513, 0, 0, 514, 0, 190,
	429, 404, 406, 233, 259, 275, -2, -2, 0, 0,
	0, 0, 0, 288, 0, 261, -2, 0, 0, 298,
	299, 300, 301, 302, 305, 306, 234, 236, 0, 309,
	0, 417, 315, 0, 309, 309, 309, 0, 0, 0,
	280, 282, 0, 0, 0, 0, 503, 148, 0, 235,
	237, 451, 317, 0, 0, -2, 0, 0, 0, 239,
	0, 0, -2, -2, 201, 265, 269, 178, 194, 0,
	0, 0, 0, 0, 194, 0, 0, 196, 198, 0,
	195, 0, 0, 507, 505, 0, 506, 509, 510, 511,
	386, 0, 505, -2, 379, 0, 0, 318, 0, 0,
	516, 0, 0, 0, 0, 0, 0, 497, 495, 0,
	0, 0, 0, 0, -2, -2, -2, -2, -2, -2,
	-2, -2, 109, 119, -2, 0, 121, 123, 164, -2,
	153, 154, 168, 159, 160, 418, -2, 0, 0, 41,
	42, 0, 409, 51, 52, 53, 28, 29, 0, 492,
	0, 0, 0, 185, 188, 186, 187, 225, 0, 0,
	0, 0, 0, 283, 284, 0, 0, 289, -2, 293,
	295, 311, 0, 312, 0, 316, 0, 0, 0, 0,
	0, 0, 0, 0, 290, 0, 277, 0, 294, 296,
	0, 0, 0, 451, -2, 0, 0, 468, 408, 414,
	0, -2, 177, 0, 208, 209, 205, 211, 212, 213,
	214, 219, 216, 217, 0, 267, 270, 271, 0, 196,
	0, 0, 433, 192, 437, 0, 233, 426, 0, 239,
	-2, 357, 0, 0, 447, 194, 424, 198, 184, 0,
	0, 0, 0, 0, 508, 0, 507, 422, -2, 0,
	390, 387, 391, 380, 239, 0, 0, 415, 0, 0,
	517, 521, 101, 0, 97, 92, 0, 0, 0, 321,
	106, 107, 0, 427, 115, 0, 0, 131, 132, 126,
	129, 125, 0, 0, 0, 112, 0, 0, -2, 239,
	0, -2, -2, 0, 0, 0, 0, 430, 405, 407,
	285, 0, 0, 319, 0, 320, 322, 323, 325, 0,
	0, 0, 0, 0, 0, 0, 263, -2, 0, 146,
	0, 0, 0, 0, 452, 239, 45, 411, 465, 239,
	218, 206, 0, 266, 0, 179, 198, 431, 0, 194,
	0, 0, 366, 309, 0, 0, 0, 448, 200, 199,
	197, 392, 0, 505, 0, 0, 0, 0, 382, 0,
	0, 0, 0, 0, 0, 89, 90, 102, 103, 0,
	0, 0, 99, 0, 0, 0, 0, 0, 113, 0,
	0, 0, 0, 0, 0, 0, 0, 120, 118, 420,
	32, 5, -2, 471, 0, 0, 0, -2, -2, 0,
	0, 286, 342, 0, 313, 0, 0, 0, 0, 0,
	0, 342, 342, 0, 342, 0, 287, 276, 0, 0,
	147, 262, 43, 0, -2, 412, 466, 0, 205, 204,
	207, 268, 272, 273, 200, 0, 435, 438, 436, 0,
	0, 0, 0, 218, 397, 393, 0, 0, 0, 505,
	0, 395, 0, 0, 0, 383, 233, 239, 0, 0,
	416, -2, 104, 105, 101, 0, 98, 93, 94, -2,
	-2, 342, 0, 428, -2, 0, 127, 133, 130, 0,
	-2, 0, 0, 455, 0, -2, 239, 0, 0, 0,
	0, 222, 0, 0, 340, 200, 0, 342, 0, 342,
	342, 342, 0, 342, 0, 200, 0, 0, 0, 0,
	264, 0, 44, 449, 203, 218, 0, 434, 367, 368,
	309, 0, 0, 180, 402, 0, 398, 394, 0, 400,
	396, 0, 384, 370, 309, 372, 309, 0, 445, 0,
	0, 91, 100, 0, 114, 0, 0, 54, 55, 0,
	409, 68, 69, 0, 61, -2, -2, 0, 0, 455,
	-2, 0, 0, 472, -2, 33, 34, 0, 0, 0,
	327, 339, 0, 0, 0, 314, 0, 0, 0, 200,
	0, 334, 335, 342, 337, 342, 0, 450, 182, 432,
	0, 0, 441, 0, 0, 0, 399, 401, 0, 0,
	443, 0, 88, 330, 134, -2, 239, 0, 239, 251,
	0, 0, -2, 0, 0, 0, 0, 0, 456, 239,
	50, 469, 35, 36, 0, 0, 343, 328, 329, 331,
	332, 0, 333, 0, 0, 278, 0, 369, 439, 0,
	181, 403, 371, 373, 0, 7, -2, 475, 0, -2,
	0, 0, 0, 0, 135, 136, -2, 48, 0, -2,
	470, 0, 223, 201, 326, 336, 338, 183, 0, 0,
	446, 459, 0, -2, 239, 0, 0, 63, 64, 0,
	409, 73, 74, 75, 0, 0, 0, 0, 0, 49,
	453, 341, 0, 0, 442, 444, 0, 459, -2, 0,
	0, 476, -2, 0, -2, 239, 0, -2, -2, 0,
	0, 137, 454, 344, 0, 0, 0, 0, 440, 0,
	0, 460, 239, 67, 473, 56, 9, -2, 479, 0,
	0, 0, -2, -2, 0, 0, 353, 0, 0, 346,
	347, 348, 65, 0, -2, 474, 0, 463, 0, -2,
	239, 0, 0, 0, 0, 0, 352, 349, 350, 351,
	66, 457, 0, 463, -2, 0, 0, 480, -2, 57,
	58, 0, 0, 345, 0, 355, 458, 0, 0, 464,
	239, 72, 477, 59, 60, 354, 70, 0, -2, 478,
	0, 71, 461, 462,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 168, 3, 3, 3, 167, 3, 3,
	169, 170, 165, 164, 171, 163, 172, 166, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 161,
	3, 162,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160,
}

var yyTok3 = [...]int{
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:251
		{
			yyVAL.program = nil
			yylex.(*Lexer).program = yyVAL.program
		}
	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:256
		{
			yyVAL.program = []Statement{yyDollar[1].statement}
			yylex.(*Lexer).program = yyVAL.program
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:261
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
			yylex.(*Lexer).program = yyVAL.program
		}
	case 4:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:268
		{
			yyVAL.program = nil
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:272
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 6:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:278
		{
			yyVAL.program = nil
		}
	case 7:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:282
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 8:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:288
		{
			yyVAL.program = nil
		}
	case 9:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:292
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 10:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:298
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 11:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:302
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 12:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:306
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 13:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:310
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 14:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:314
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 15:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:318
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 16:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:322
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 17:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:326
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:330
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 19:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:334
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:338
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 21:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:342
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:346
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 23:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:350
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 24:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:354
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 25:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:358
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 26:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:362
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 27:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:366
		{
			yyVAL.statement = ExternalCommand{BaseExpr: NewBaseExpr(yyDollar[1].token), Command: yyDollar[1].token.Literal}
		}
	case 28:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:372
		{
			yyVAL.statement = FlowControl{Token: yyDollar[1].token.Token}
		}
	case 29:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:376
		{
			yyVAL.statement = FlowControl{Token: yyDollar[1].token.Token}
		}
	case 30:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:382
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:386
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 32:
		yyDollar = yyS[yypt-6 : yypt+1]
//line parser.y:392
		{
			yyVAL.statement = While{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}
		}
	case 33:
		yyDollar = yyS[yypt-8 : yypt+1]
//line parser.y:396
		{
			yyVAL.statement = WhileInCursor{Variables: []Variable{yyDollar[2].variable}, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 34:
		yyDollar = yyS[yypt-8 : yypt+1]
//line parser.y:400
		{
			yyVAL.statement = WhileInCursor{Variables: yyDollar[2].variables, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 35:
		yyDollar = yyS[yypt-9 : yypt+1]
//line parser.y:404
		{
			yyVAL.statement = WhileInCursor{WithDeclaration: true, Variables: []Variable{yyDollar[3].variable}, Cursor: yyDollar[5].identifier, Statements: yyDollar[7].program}
		}
	case 36:
		yyDollar = yyS[yypt-9 : yypt+1]
//line parser.y:408
		{
			yyVAL.statement = WhileInCursor{WithDeclaration: true, Variables: yyDollar[3].variables, Cursor: yyDollar[5].identifier, Statements: yyDollar[7].program}
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:414
		{
			yyVAL.token = yyDollar[1].token
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:418
		{
			yyVAL.token = yyDollar[1].token
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:424
		{
			yyVAL.statement = Exit{}
		}
	case 40:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:428
		{
			yyVAL.statement = Exit{Code: value.NewIntegerFromString(yyDollar[2].token.Literal)}
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:434
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:438
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 43:
		yyDollar = yyS[yypt-7 : yypt+1]
//line parser.y:444
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 44:
		yyDollar = yyS[yypt-8 : yypt+1]
//line parser.y:448
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 45:
		yyDollar = yyS[yypt-6 : yypt+1]
//line parser.y:452
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:456
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:460
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 48:
		yyDollar = yyS[yypt-7 : yypt+1]
//line parser.y:466
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 49:
		yyDollar = yyS[yypt-8 : yypt+1]
//line parser.y:470
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 50:
		yyDollar = yyS[yypt-6 : yypt+1]
//line parser.y:474
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:478
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:482
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:486
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:492
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:496
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 56:
		yyDollar = yyS[yypt-6 : yypt+1]
//line parser.y:502
		{
			yyVAL.statement = While{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}
		}
	case 57:
		yyDollar = yyS[yypt-8 : yypt+1]
//line parser.y:506
		{
			yyVAL.statement = WhileInCursor{Variables: []Variable{yyDollar[2].variable}, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 58:
		yyDollar = yyS[yypt-8 : yypt+1]
//line parser.y:510
		{
			yyVAL.statement = WhileInCursor{Variables: yyDollar[2].variables, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 59:
		yyDollar = yyS[yypt-9 : yypt+1]
//line parser.y:514
		{
			yyVAL.statement = WhileInCursor{WithDeclaration: true, Variables: []Variable{yyDollar[3].variable}, Cursor: yyDollar[5].identifier, Statements: yyDollar[7].program}
		}
	case 60:
		yyDollar = yyS[yypt-9 : yypt+1]
//line parser.y:518
		{
			yyVAL.statement = WhileInCursor{WithDeclaration: true, Variables: yyDollar[3].variables, Cursor: yyDollar[5].identifier, Statements: yyDollar[7].program}
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:524
		{
			yyVAL.statement = Return{Value: NewNullValue()}
		}
	case 62:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:528
		{
			yyVAL.statement = Return{Value: yyDollar[2].queryexpr}
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:534
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:538
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 65:
		yyDollar = yyS[yypt-7 : yypt+1]
//line parser.y:544
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 66:
		yyDollar = yyS[yypt-8 : yypt+1]
//line parser.y:548
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 67:
		yyDollar = yyS[yypt-6 : yypt+1]
//line parser.y:552
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:556
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:560
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 70:
		yyDollar = yyS[yypt-7 : yypt+1]
//line parser.y:566
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 71:
		yyDollar = yyS[yypt-8 : yypt+1]
//line parser.y:570
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 72:
		yyDollar = yyS[yypt-6 : yypt+1]
//line parser.y:574
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:578
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:582
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:586
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:592
		{
			yyVAL.statement = VariableDeclaration{Assignments: yyDollar[2].varassigns}
		}
	case 77:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:596
		{
			yyVAL.statement = VariableDeclaration{Assignments: yyDollar[2].varassigns}
		}
	case 78:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:600
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:604
		{
			yyVAL.statement = DisposeVariable{Variable: yyDollar[2].variable}
		}
	case 80:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:610
		{
			yyVAL.statement = SetEnvVar{EnvVar: yyDollar[2].envvar, Value: yyDollar[4].queryexpr}
		}
	case 81:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:614
		{
			yyVAL.statement = SetEnvVar{EnvVar: yyDollar[2].envvar, Value: yyDollar[4].identifier}
		}
	case 82:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:618
		{
			yyVAL.statement = SetEnvVar{EnvVar: yyDollar[2].envvar, Value: yyDollar[4].queryexpr}
		}
	case 83:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:622
		{
			yyVAL.statement = SetEnvVar{EnvVar: yyDollar[2].envvar, Value: yyDollar[4].identifier}
		}
	case 84:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:626
		{
			yyVAL.statement = UnsetEnvVar{EnvVar: yyDollar[2].envvar}
		}
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:632
		{
			yyVAL.statement = TransactionControl{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[1].token.Token}
		}
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:636
		{
			yyVAL.statement = TransactionControl{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[1].token.Token}
		}
	case 87:
		yyDollar = yyS[yypt-7 : yypt+1]
//line parser.y:642
		{
			yyVAL.statement = CreateTable{Table: yyDollar[4].identifier, Fields: yyDollar[6].queryexprs, IfNotExists: yyDollar[3].bool}
		}
	case 88:
		yyDollar = yyS[yypt-9 : yypt+1]
//line parser.y:646
		{
			yyVAL.statement = CreateTable{Table: yyDollar[4].identifier, Fields: yyDollar[6].queryexprs, Query: yyDollar[9].queryexpr, IfNotExists: yyDollar[3].bool}
		}
	case 89:
		yyDollar = yyS[yypt-6 : yypt+1]
//line parser.y:650
		{
			yyVAL.statement = CreateTable{Table: yyDollar[4].identifier, Query: yyDollar[6].queryexpr, IfNotExists: yyDollar[3].bool}
		}
	case 90:
		yyDollar = yyS[yypt-6 : yypt+1]
//line parser.y:654
		{
			yyVAL.statement = AddColumns{Table: yyDollar[3].queryexpr, Columns: []ColumnDefault{yyDollar[5].columndef}, Position: yyDollar[6].expression}
		}
	case 91:
		yyDollar = yyS[yypt-8 : yypt+1]
//line parser.y:658
		{
			yyVAL.statement = AddColumns{Table: yyDollar[3].queryexpr, Columns: yyDollar[6].columndefs, Position: yyDollar[8].expression}
		}
	case 92:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser.y:662
		{
			yyVAL.statement = DropColumns{Table: yyDollar[3].queryexpr, Columns: []QueryExpression{yyDollar[5].queryexpr}}
		}
	case 93:
		yyDollar = yyS[yypt-7 : yypt+1]
//line parser.y:666
		{
			yyVAL.statement = DropColumns{Table: yyDollar[3].queryexpr, Columns: yyDollar[6].queryexprs}
		}
	case 94:
		yyDollar = yyS[yypt-7 : yypt+1]
//line parser.y:670
		{
			yyVAL.statement = RenameColumn{Table: yyDollar[3].queryexpr, Old: yyDollar[5].queryexpr, New: yyDollar[7].identifier}
		}
	case 95:
		yyDollar = yyS[yypt-7 : yypt+1]
//line parser.y:674
		{
			yyVAL.statement = SetTableAttribute{BaseExpr: NewBaseExpr(yyDollar[1].token), Table: yyDollar[3].queryexpr, Attribute: yyDollar[5].identifier, Value: yyDollar[7].identifier}
		}
	case 96:
		yyDollar = yyS[yypt-7 : yypt+1]
//line parser.y:678
		{
			yyVAL.statement = SetTableAttribute{BaseExpr: NewBaseExpr(yyDollar[1].token), Table: yyDollar[3].queryexpr, Attribute: yyDollar[5].identifier, Value: yyDollar[7].queryexpr}
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:684
		{
			yyVAL.columndef = ColumnDefault{Column: yyDollar[1].identifier}
		}
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:688
		{
			yyVAL.columndef = ColumnDefault{Column: yyDollar[1].identifier, Value: yyDollar[3].queryexpr}
		}
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:694
		{
			yyVAL.columndefs = []ColumnDefault{yyDollar[1].columndef}
		}
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:698
		{
			yyVAL.columndefs = append([]ColumnDefault{yyDollar[1].columndef}, yyDollar[3].columndefs...)
		}
	case 101:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:704
		{
			yyVAL.expression = nil
		}
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:708
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token}
		}
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:712
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token}
		}
	case 104:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:716
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token, Column: yyDollar[2].queryexpr}
		}
	case 105:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:720
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token, Column: yyDollar[2].queryexpr}
		}
	case 106:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser.y:726
		{
			yyVAL.statement = CursorDeclaration{Cursor: yyDollar[2].identifier, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 107:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser.y:730
		{
			yyVAL.statement = CursorDeclaration{Cursor: yyDollar[2].identifier, Statement: yyDollar[5].identifier}
		}
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:734
		{
			yyVAL.statement = OpenCursor{Cursor: yyDollar[2].identifier}
		}
	case 109:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:738
		{
			yyVAL.statement = OpenCursor{Cursor: yyDollar[2].identifier, Values: yyDollar[4].replacevals}
		}
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:742
		{
			yyVAL.statement = CloseCursor{Cursor: yyDollar[2].identifier}
		}
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:746
		{
			yyVAL.statement = DisposeCursor{Cursor: yyDollar[3].identifier}
		}
	case 112:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser.y:750
		{
			yyVAL.statement = FetchCursor{Position: yyDollar[2].fetchpos, Cursor: yyDollar[3].identifier, Variables: yyDollar[5].variables}
		}
	case 113:
		yyDollar = yyS[yypt-6 : yypt+1]
//line parser.y:756
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Fields: yyDollar[5].queryexprs}
		}
	case 114:
		yyDollar = yyS[yypt-8 : yypt+1]
//line parser.y:760
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Fields: yyDollar[5].queryexprs, Query: yyDollar[8].queryexpr}
		}
	case 115:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser.y:764
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Query: yyDollar[5].queryexpr}
		}
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:768
		{
			yyVAL.statement = DisposeView{View: yyDollar[3].queryexpr}
		}
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:774
		{
			yyVAL.replaceval = ReplaceValue{Value: yyDollar[1].queryexpr}
		}
	case 118:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:778
		{
			yyVAL.replaceval = ReplaceValue{Value: yyDollar[1].queryexpr, Name: yyDollar[3].identifier}
		}
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:784
		{
			yyVAL.replacevals = []ReplaceValue{yyDollar[1].replaceval}
		}
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:788
		{
			yyVAL.replacevals = append([]ReplaceValue{yyDollar[1].replaceval}, yyDollar[3].replacevals...)
		}
	case 121:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:794
		{
			yyVAL.statement = StatementPreparation{Name: yyDollar[2].identifier, Statement: value.NewString(yyDollar[4].token.Literal)}
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:798
		{
			yyVAL.statement = ExecuteStatement{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[2].identifier}
		}
	case 123:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:802
		{
			yyVAL.statement = ExecuteStatement{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[2].identifier, Values: yyDollar[4].replacevals}
		}
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:806
		{
			yyVAL.statement = DisposeStatement{Name: yyDollar[3].identifier}
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:812
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable}
		}
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:818
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:822
		{
			yyVAL.varassigns = append(yyDollar[1].varassigns, yyDollar[3].varassign)
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:828
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:834
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 130:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:838
		{
			yyVAL.varassigns = append([]VariableAssignment{yyDollar[1].varassign}, yyDollar[3].varassigns...)
		}
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:844
		{
			yyVAL.varassigns = yyDollar[1].varassigns
		}
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:848
		{
			yyVAL.varassigns = yyDollar[1].varassigns
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:852
		{
			yyVAL.varassigns = append(yyDollar[1].varassigns, yyDollar[3].varassigns...)
		}
	case 134:
		yyDollar = yyS[yypt-9 : yypt+1]
//line parser.y:858
		{
			yyVAL.statement = FunctionDeclaration{Name: yyDollar[2].identifier, Statements: yyDollar[8].program}
		}
	case 135:
		yyDollar = yyS[yypt-10 : yypt+1]
//line parser.y:862
		{
			yyVAL.statement = FunctionDeclaration{Name: yyDollar[2].identifier, Parameters: yyDollar[5].varassigns, Statements: yyDollar[9].program}
		}
	case 136:
		yyDollar = yyS[yypt-10 : yypt+1]
//line parser.y:866
		{
			yyVAL.statement = AggregateDeclaration{Name: yyDollar[2].identifier, Cursor: yyDollar[5].identifier, Statements: yyDollar[9].program}
		}
	case 137:
		yyDollar = yyS[yypt-12 : yypt+1]
//line parser.y:870
		{
			yyVAL.statement = AggregateDeclaration{Name: yyDollar[2].identifier, Cursor: yyDollar[5].identifier, Parameters: yyDollar[7].varassigns, Statements: yyDollar[11].program}
		}
	case 138:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:874
		{
			yyVAL.statement = DisposeFunction{Name: yyDollar[3].identifier}
		}
	case 139:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:880
		{
			yyVAL.fetchpos = FetchPosition{}
		}
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:884
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:888
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:892
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:896
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:900
		{
			yyVAL.fetchpos = FetchPosition{BaseExpr: NewBaseExpr(yyDollar[1].token), Position: yyDollar[1].token, Number: yyDollar[2].queryexpr}
		}
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:904
		{
			yyVAL.fetchpos = FetchPosition{BaseExpr: NewBaseExpr(yyDollar[1].token), Position: yyDollar[1].token, Number: yyDollar[2].queryexpr}
		}
	case 146:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser.y:910
		{
			yyVAL.queryexpr = CursorStatus{Cursor: yyDollar[2].identifier, Negation: yyDollar[4].token, Type: yyDollar[5].token}
		}
	case 147:
		yyDollar = yyS[yypt-6 : yypt+1]
//line parser.y:914
		{
			yyVAL.queryexpr = CursorStatus{Cursor: yyDollar[2].identifier, Negation: yyDollar[4].token, Type: yyDollar[6].token}
		}
	case 148:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:918
		{
			yyVAL.queryexpr = CursorAttrebute{Cursor: yyDollar[2].identifier, Attrebute: yyDollar[3].token}
		}
	case 149:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:924
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[2].flag, Value: yyDollar[4].identifier}
		}
	case 150:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:928
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[2].flag, Value: yyDollar[4].queryexpr}
		}
	case 151:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:932
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[2].flag, Value: yyDollar[4].identifier}
		}
	case 152:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:936
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[2].flag, Value: yyDollar[4].queryexpr}
		}
	case 153:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:940
		{
			yyVAL.statement = AddFlagElement{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[4].flag, Value: yyDollar[2].queryexpr}
		}
	case 154:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:944
		{
			yyVAL.statement = RemoveFlagElement{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[4].flag, Value: yyDollar[2].queryexpr}
		}
	case 155:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:948
		{
			yyVAL.statement = ShowFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[2].flag}
		}
	case 156:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:952
		{
			yyVAL.statement = Echo{Value: yyDollar[2].queryexpr}
		}
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:956
		{
			yyVAL.statement = Print{Value: yyDollar[2].queryexpr}
		}
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:960
		{
			yyVAL.statement = Printf{BaseExpr: NewBaseExpr(yyDollar[1].token), Format: yyDollar[2].queryexpr}
		}
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:964
		{
			yyVAL.statement = Printf{BaseExpr: NewBaseExpr(yyDollar[1].token), Format: yyDollar[2].queryexpr, Values: yyDollar[4].queryexprs}
		}
	case 160:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:968
		{
			yyVAL.statement = Printf{BaseExpr: NewBaseExpr(yyDollar[1].token), Format: yyDollar[2].queryexpr, Values: yyDollar[4].queryexprs}
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:972
		{
			yyVAL.statement = Source{BaseExpr: NewBaseExpr(yyDollar[1].token), FilePath: yyDollar[2].identifier}
		}
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:976
		{
			yyVAL.statement = Source{BaseExpr: NewBaseExpr(yyDollar[1].token), FilePath: yyDollar[2].queryexpr}
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:980
		{
			yyVAL.statement = Execute{BaseExpr: NewBaseExpr(yyDollar[1].token), Statements: yyDollar[2].queryexpr}
		}
	case 164:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:984
		{
			yyVAL.statement = Execute{BaseExpr: NewBaseExpr(yyDollar[1].token), Statements: yyDollar[2].queryexpr, Values: yyDollar[4].queryexprs}
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:988
		{
			yyVAL.statement = Syntax{BaseExpr: NewBaseExpr(yyDollar[1].token)}
		}
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:992
		{
			yyVAL.statement = Syntax{BaseExpr: NewBaseExpr(yyDollar[1].token), Keywords: yyDollar[2].queryexprs}
		}
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:996
		{
			yyVAL.statement = ShowObjects{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].identifier}
		}
	case 168:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:1000
		{
			yyVAL.statement = ShowFields{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].identifier, Table: yyDollar[4].queryexpr}
		}
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:1004
		{
			yyVAL.statement = Chdir{BaseExpr: NewBaseExpr(yyDollar[1].token), DirPath: yyDollar[2].identifier}
		}
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:1008
		{
			yyVAL.statement = Chdir{BaseExpr: NewBaseExpr(yyDollar[1].token), DirPath: yyDollar[2].queryexpr}
		}
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1012
		{
			yyVAL.statement = Pwd{BaseExpr: NewBaseExpr(yyDollar[1].token)}
		}
	case 172:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:1016
		{
			yyVAL.statement = Reload{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].identifier}
		}
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:1022
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Event: yyDollar[2].identifier}
		}
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:1026
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Event: yyDollar[2].identifier, Message: yyDollar[3].queryexpr}
		}
	case 175:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:1030
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Event: yyDollar[2].identifier, Message: yyDollar[4].queryexpr, Code: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:1036
		{
			yyVAL.queryexpr = SelectQuery{
				SelectEntity:  yyDollar[1].queryexpr,
				OrderByClause: yyDollar[2].queryexpr,
				LimitClause:   yyDollar[3].queryexpr,
			}
		}
	case 177:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser.y:1044
		{
			yyVAL.queryexpr = SelectQuery{
				SelectEntity:  yyDollar[1].queryexpr,
				OrderByClause: yyDollar[2].queryexpr,
				LimitClause:   yyDollar[3].queryexpr,
				Context:       yyDollar[5].token,
			}
		}
	case 178:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:1053
		{
			yyVAL.queryexpr = SelectQuery{
				WithClause:    yyDollar[1].queryexpr,
				SelectEntity:  yyDollar[2].queryexpr,
				OrderByClause: yyDollar[3].queryexpr,
				LimitClause:   yyDollar[4].queryexpr,
			}
		}
	case 179:
		yyDollar = yyS[yypt-6 : yypt+1]
//line parser.y:1062
		{
			yyVAL.queryexpr = SelectQuery{
				WithClause:    yyDollar[1].queryexpr,
				SelectEntity:  yyDollar[2].queryexpr,
				OrderByClause: yyDollar[3].queryexpr,
				LimitClause:   yyDollar[4].queryexpr,
				Context:       yyDollar[6].token,
			}
		}
	case 180:
		yyDollar = yyS[yypt-8 : yypt+1]
//line parser.y:1074
		{
			yyVAL.queryexpr = SelectQuery{
				SelectEntity: SelectEntity{
					SelectClause:  yyDollar[1].queryexpr,
					IntoClause:    yyDollar[2].queryexpr,
					FromClause:    yyDollar[3].queryexpr,
					WhereClause:   yyDollar[4].queryexpr,
					GroupByClause: yyDollar[5].queryexpr,
					HavingClause:  yyDollar[6].queryexpr,
				},
				OrderByClause: yyDollar[7].queryexpr,
				LimitClause:   yyDollar[8].queryexpr,
			}
		}
	case 181:
		yyDollar = yyS[yypt-10 : yypt+1]
//line parser.y:1089
		{
			yyVAL.queryexpr = SelectQuery{
				SelectEntity: SelectEntity{
					SelectClause:  yyDollar[1].queryexpr,
					IntoClause:    yyDollar[2].queryexpr,
					FromClause:    yyDollar[3].queryexpr,
					WhereClause:   yyDollar[4].queryexpr,
					GroupByClause: yyDollar[5].queryexpr,
					HavingClause:  yyDollar[6].queryexpr,
				},
				OrderByClause: yyDollar[7].queryexpr,
				LimitClause:   yyDollar[8].queryexpr,
				Context:       yyDollar[10].token,
			}
		}
	case 182:
		yyDollar = yyS[yypt-9 : yypt+1]
//line parser.y:1105
		{
			yyVAL.queryexpr = SelectQuery{
				WithClause: yyDollar[1].queryexpr,
				SelectEntity: SelectEntity{
					SelectClause:  yyDollar[2].queryexpr,
					IntoClause:    yyDollar[3].queryexpr,
					FromClause:    yyDollar[4].queryexpr,
					WhereClause:   yyDollar[5].queryexpr,
					GroupByClause: yyDollar[6].queryexpr,
					HavingClause:  yyDollar[7].queryexpr,
				},
				OrderByClause: yyDollar[8].queryexpr,
				LimitClause:   yyDollar[9].queryexpr,
			}
		}
	case 183:
		yyDollar = yyS[yypt-11 : yypt+1]
//line parser.y:1121
		{
			yyVAL.queryexpr = SelectQuery{
				WithClause: yyDollar[1].queryexpr,
				SelectEntity: SelectEntity{
					SelectClause:  yyDollar[2].queryexpr,
					IntoClause:    yyDollar[3].queryexpr,
					FromClause:    yyDollar[4].queryexpr,
					WhereClause:   yyDollar[5].queryexpr,
					GroupByClause: yyDollar[6].queryexpr,
					HavingClause:  yyDollar[7].queryexpr,
				},
				OrderByClause: yyDollar[8].queryexpr,
				LimitClause:   yyDollar[9].queryexpr,
				Context:       yyDollar[11].token,
			}
		}
	case 184:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser.y:1140
		{
			yyVAL.queryexpr = SelectEntity{
				SelectClause:  yyDollar[1].queryexpr,
				FromClause:    yyDollar[2].queryexpr,
				WhereClause:   yyDollar[3].queryexpr,
				GroupByClause: yyDollar[4].queryexpr,
				HavingClause:  yyDollar[5].queryexpr,
			}
		}
	case 185:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:1150
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 186:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:1159
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 187:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:1168
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1179
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1183
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 190:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:1189
		{
			yyVAL.queryexpr = SelectClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Distinct: yyDollar[2].token, Fields: yyDollar[3].queryexprs}
		}
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:1195
		{
			yyVAL.queryexpr = IntoClause{Variables: yyDollar[2].variables}
		}
	case 192:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:1201
		{
			yyVAL.queryexpr = nil
		}
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:1205
		{
			yyVAL.queryexpr = FromClause{Tables: yyDollar[2].queryexprs}
		}
	case 194:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:1211
		{
			yyVAL.queryexpr = nil
		}
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:1215
		{
			yyVAL.queryexpr = WhereClause{Filter: yyDollar[2].queryexpr}
		}
	case 196:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:1221
		{
			yyVAL.queryexpr = nil
		}
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:1225
		{
			yyVAL.queryexpr = GroupByClause{Items: yyDollar[3].queryexprs}
		}
	case 198:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:1231
		{
			yyVAL.queryexpr = nil
		}
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:1235
		{
			yyVAL.queryexpr = HavingClause{Filter: yyDollar[2].queryexpr}
		}
	case 200:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:1241
		{
			yyVAL.queryexpr = nil
		}
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:1245
		{
			yyVAL.queryexpr = OrderByClause{Items: yyDollar[3].queryexprs}
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1251
		{
			if yyDollar[1].queryexpr == nil {
				yyVAL.queryexpr = yyDollar[1].queryexpr
			} else {
				yyVAL.queryexpr = LimitClause{BaseExpr: yyDollar[1].queryexpr.(OffsetClause).BaseExpr, OffsetClause: yyDollar[1].queryexpr}
			}
		}
	case 203:
		yyDollar = yyS[yypt-6 : yypt+1]
//line parser.y:1259
		{
			var base *BaseExpr
			if yyDollar[1].queryexpr == nil {
				base = NewBaseExpr(yyDollar[2].token)
			} else {
				base = yyDollar[1].queryexpr.(OffsetClause).BaseExpr
			}
			yyVAL.queryexpr = LimitClause{BaseExpr: base, Type: yyDollar[2].token, Position: yyDollar[3].token, Value: yyDollar[4].queryexpr, Unit: yyDollar[5].token, Restriction: yyDollar[6].token, OffsetClause: yyDollar[1].queryexpr}
		}
	case 204:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser.y:1269
		{
			yyVAL.queryexpr = LimitClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[1].token, Value: yyDollar[2].queryexpr, Unit: yyDollar[3].token, Restriction: yyDollar[4].token, OffsetClause: yyDollar[5].queryexpr}
		}
	case 205:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:1275
		{
			yyVAL.token = Token{}
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1279
		{
			yyVAL.token = yyDollar[1].token
		}
	case 207:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:1283
		{
			yyVAL.token = yyDollar[2].token
		}
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1289
		{
			yyVAL.token = yyDollar[1].token
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1293
		{
			yyVAL.token = yyDollar[1].token
		}
	case 210:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:1299
		{
			yyVAL.token = Token{}
		}
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1303
		{
			yyVAL.token = yyDollar[1].token
		}
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1309
		{
			yyVAL.token = yyDollar[1].token
		}
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1313
		{
			yyVAL.token = yyDollar[1].token
		}
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1317
		{
			yyVAL.token = yyDollar[1].token
		}
	case 215:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:1323
		{
			yyVAL.token = Token{}
		}
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1327
		{
			yyVAL.token = yyDollar[1].token
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1331
		{
			yyVAL.token = yyDollar[1].token
		}
	case 218:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:1337
		{
			yyVAL.queryexpr = nil
		}
	case 219:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:1341
		{
			yyVAL.queryexpr = OffsetClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Value: yyDollar[2].queryexpr, Unit: yyDollar[3].token}
		}
	case 220:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:1347
		{
			yyVAL.queryexpr = nil
		}
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:1351
		{
			yyVAL.queryexpr = WithClause{InlineTables: yyDollar[2].queryexprs}
		}
	case 222:
		yyDollar = yyS[yypt-6 : yypt+1]
//line parser.y:1357
		{
			yyVAL.queryexpr = InlineTable{Recursive: yyDollar[1].token, Name: yyDollar[2].identifier, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 223:
		yyDollar = yyS[yypt-9 : yypt+1]
//line parser.y:1361
		{
			yyVAL.queryexpr = InlineTable{Recursive: yyDollar[1].token, Name: yyDollar[2].identifier, Fields: yyDollar[4].queryexprs, Query: yyDollar[8].queryexpr.(SelectQuery)}
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1367
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 225:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:1371
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1377
		{
			yyVAL.queryexpr = NewStringValue(yyDollar[1].token.Literal)
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1381
		{
			i, err := strconv.ParseInt(yyDollar[1].token.Literal, 10, 64)
			if err != nil {
				yyVAL.queryexpr = NewFloatValueFromString(yyDollar[1].token.Literal)
			} else {
				iv := NewIntegerValue(i)
				iv.Literal = yyDollar[1].token.Literal
				yyVAL.queryexpr = iv
			}
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1392
		{
			yyVAL.queryexpr = NewFloatValueFromString(yyDollar[1].token.Literal)
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1396
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1400
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1406
		{
			yyVAL.queryexpr = NewTernaryValueFromString(yyDollar[1].token.Literal)
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1412
		{
			yyVAL.queryexpr = NewNullValue()
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1418
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: yyDollar[1].identifier.BaseExpr, Column: yyDollar[1].identifier}
		}
	case 234:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:1422
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: yyDollar[1].identifier.BaseExpr, View: yyDollar[1].identifier, Column: yyDollar[3].identifier}
		}
	case 235:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:1426
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: NewBaseExpr(yyDollar[1].token), View: Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal}, Column: yyDollar[3].identifier}
		}
	case 236:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:1430
		{
			yyVAL.queryexpr = ColumnNumber{BaseExpr: yyDollar[1].identifier.BaseExpr, View: yyDollar[1].identifier, Number: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 237:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:1434
		{
			yyVAL.queryexpr = ColumnNumber{BaseExpr: NewBaseExpr(yyDollar[1].token), View: Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal}, Number: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1440
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1444
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:1448
		{
			yyVAL.queryexpr = Parentheses{Expr: yyDollar[2].queryexpr}
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1454
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1458
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1462
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1466
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1470
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1474
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1478
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1482
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1486
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1490
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1494
		{
			yyVAL.queryexpr = yyDollar[1].variable
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1498
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1502
		{
			yyVAL.queryexpr = yyDollar[1].envvar
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1506
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1510
		{
			yyVAL.queryexpr = yyDollar[1].flag
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1514
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:1518
		{
			yyVAL.queryexpr = Parentheses{Expr: yyDollar[2].queryexpr}
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1522
		{
			name := ""
			if yyDollar[1].token.Literal[0] == ':' {
				name = yyDollar[1].token.Literal[1:]
			}
			yyVAL.queryexpr = Placeholder{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Ordinal: yyDollar[1].token.HolderOrdinal, Name: name}
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1532
		{
			yyVAL.queryexpr = AllColumns{BaseExpr: NewBaseExpr(yyDollar[1].token)}
		}
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:1538
		{
			yyVAL.queryexpr = RowValue{BaseExpr: NewBaseExpr(yyDollar[1].token), Value: ValueList{Values: yyDollar[2].queryexprs}}
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1542
		{
			yyVAL.queryexpr = RowValue{BaseExpr: yyDollar[1].queryexpr.GetBaseExpr(), Value: yyDollar[1].queryexpr}
		}
	case 262:
		yyDollar = yyS[yypt-6 : yypt+1]
//line parser.y:1546
		{
			yyVAL.queryexpr = RowValue{BaseExpr: NewBaseExpr(yyDollar[1].token), Value: JsonQuery{JsonQuery: yyDollar[1].token, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].queryexpr}}
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1552
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 264:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:1556
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1562
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 266:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:1566
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 267:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:1572
		{
			yyVAL.queryexpr = OrderItem{Value: yyDollar[1].queryexpr, Direction: yyDollar[2].token}
		}
	case 268:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:1576
		{
			yyVAL.queryexpr = OrderItem{Value: yyDollar[1].queryexpr, Direction: yyDollar[2].token, NullsPosition: yyDollar[4].token}
		}
	case 269:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:1582
		{
			yyVAL.token = Token{}
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1586
		{
			yyVAL.token = yyDollar[1].token
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1590
		{
			yyVAL.token = yyDollar[1].token
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1596
		{
			yyVAL.token = yyDollar[1].token
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1600
		{
			yyVAL.token = yyDollar[1].token
		}
	case 274:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:1606
		{
			yyVAL.queryexpr = Subquery{BaseExpr: NewBaseExpr(yyDollar[1].token), Query: yyDollar[2].queryexpr.(SelectQuery)}
		}
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:1612
		{
			var item1 []QueryExpression
			var item2 []QueryExpression

			c1, ok := yyDollar[1].queryexpr.(Concat)
			if ok {
				item1 = c1.Items
			} else {
				item1 = []QueryExpression{yyDollar[1].queryexpr}
			}

			c2, ok := yyDollar[3].queryexpr.(Concat)
			if ok {
				item2 = c2.Items
			} else {
				item2 = []QueryExpression{yyDollar[3].queryexpr}
			}

			yyVAL.queryexpr = Concat{Items: append(item1, item2...)}
		}
	case 276:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:1635
		{
			yyVAL.queryexpr = RowValueList{RowValues: yyDollar[2].queryexprs}
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1639
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 278:
		yyDollar = yyS[yypt-6 : yypt+1]
//line parser.y:1643
		{
			yyVAL.queryexpr = JsonQuery{BaseExpr: NewBaseExpr(yyDollar[1].token), JsonQuery: yyDollar[1].token, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].queryexpr}
		}
	case 279:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:1649
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 280:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:1653
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 281:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:1657
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:1661
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 283:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:1665
		{
			yyVAL.queryexpr = Is{LHS: yyDollar[1].queryexpr, RHS: yyDollar[4].queryexpr, Negation: yyDollar[3].token}
		}
	case 284:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:1669
		{
			yyVAL.queryexpr = Is{LHS: yyDollar[1].queryexpr, RHS: yyDollar[4].queryexpr, Negation: yyDollar[3].token}
		}
	case 285:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser.y:1673
		{
			yyVAL.queryexpr = Between{LHS: yyDollar[1].queryexpr, Low: yyDollar[3].queryexpr, High: yyDollar[5].queryexpr}
		}
	case 286:
		yyDollar = yyS[yypt-6 : yypt+1]
//line parser.y:1677
		{
			yyVAL.queryexpr = Between{LHS: yyDollar[1].queryexpr, Low: yyDollar[4].queryexpr, High: yyDollar[6].queryexpr, Negation: yyDollar[2].token}
		}
	case 287:
		yyDollar = yyS[yypt-6 : yypt+1]
//line parser.y:1681
		{
			yyVAL.queryexpr = Between{LHS: yyDollar[1].queryexpr, Low: yyDollar[4].queryexpr, High: yyDollar[6].queryexpr, Negation: yyDollar[2].token}
		}
	case 288:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:1685
		{
			yyVAL.queryexpr = In{LHS: yyDollar[1].queryexpr, Values: yyDollar[3].queryexpr}
		}
	case 289:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:1689
		{
			yyVAL.queryexpr = In{LHS: yyDollar[1].queryexpr, Values: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 290:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:1693
		{
			yyVAL.queryexpr = In{LHS: yyDollar[1].queryexpr, Values: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 291:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:1697
		{
			yyVAL.queryexpr = Like{LHS: yyDollar[1].queryexpr, Pattern: yyDollar[3].queryexpr}
		}
	case 292:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:1701
		{
			yyVAL.queryexpr = Like{LHS: yyDollar[1].queryexpr, Pattern: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 293:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:1705
		{
			yyVAL.queryexpr = Any{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, Values: yyDollar[4].queryexpr}
		}
	case 294:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:1709
		{
			yyVAL.queryexpr = Any{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, Values: yyDollar[4].queryexpr}
		}
	case 295:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:1713
		{
			yyVAL.queryexpr = All{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, Values: yyDollar[4].queryexpr}
		}
	case 296:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:1717
		{
			yyVAL.queryexpr = All{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, Values: yyDollar[4].queryexpr}
		}
	case 297:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:1721
		{
			yyVAL.queryexpr = Exists{Query: yyDollar[2].queryexpr.(Subquery)}
		}
	case 298:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:1727
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:1731
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 300:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:1735
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 301:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:1739
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 302:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:1743
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:1747
		{
			yyVAL.queryexpr = UnaryArithmetic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:1751
		{
			yyVAL.queryexpr = UnaryArithmetic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 305:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:1757
		{
			yyVAL.queryexpr = Logic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 306:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:1761
		{
			yyVAL.queryexpr = Logic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:1765
		{
			yyVAL.queryexpr = UnaryLogic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 308:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:1769
		{
			yyVAL.queryexpr = UnaryLogic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 309:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:1775
		{
			yyVAL.queryexprs = nil
		}
	case 310:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1779
		{
			yyVAL.queryexprs = yyDollar[1].queryexprs
		}
	case 311:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:1785
		{
			yyVAL.queryexpr = Function{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Args: yyDollar[3].queryexprs}
		}
	case 312:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:1789
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs}
		}
	case 313:
		yyDollar = yyS[yypt-6 : yypt+1]
//line parser.y:1793
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: []QueryExpression{yyDollar[3].queryexpr, yyDollar[5].queryexpr}, From: yyDollar[4].token}
		}
	case 314:
		yyDollar = yyS[yypt-8 : yypt+1]
//line parser.y:1797
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: []QueryExpression{yyDollar[3].queryexpr, yyDollar[5].queryexpr, yyDollar[7].queryexpr}, From: yyDollar[4].token, For: yyDollar[6].token}
		}
	case 315:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:1801
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 316:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:1805
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs}
		}
	case 317:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:1809
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs}
		}
	case 318:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:1813
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs}
		}
	case 319:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser.y:1820
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 320:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser.y:1824
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 321:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser.y:1828
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 322:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser.y:1832
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 323:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser.y:1836
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: []QueryExpression{yyDollar[4].queryexpr}}
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1840
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 325:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser.y:1846
		{
			yyVAL.queryexpr = ListFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 326:
		yyDollar = yyS[yypt-10 : yypt+1]
//line parser.y:1850
		{
			yyVAL.queryexpr = ListFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, OrderBy: yyDollar[9].queryexpr}
		}
	case 327:
		yyDollar = yyS[yypt-8 : yypt+1]
//line parser.y:1856
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Args: yyDollar[3].queryexprs, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 328:
		yyDollar = yyS[yypt-9 : yypt+1]
//line parser.y:1860
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 329:
		yyDollar = yyS[yypt-9 : yypt+1]
//line parser.y:1864
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 330:
		yyDollar = yyS[yypt-9 : yypt+1]
//line parser.y:1868
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 331:
		yyDollar = yyS[yypt-9 : yypt+1]
//line parser.y:1872
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 332:
		yyDollar = yyS[yypt-9 : yypt+1]
//line parser.y:1876
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: []QueryExpression{yyDollar[4].queryexpr}, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 333:
		yyDollar = yyS[yypt-9 : yypt+1]
//line parser.y:1880
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 334:
		yyDollar = yyS[yypt-8 : yypt+1]
//line parser.y:1884
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 335:
		yyDollar = yyS[yypt-8 : yypt+1]
//line parser.y:1888
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 336:
		yyDollar = yyS[yypt-10 : yypt+1]
//line parser.y:1892
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, IgnoreType: yyDollar[6].token, AnalyticClause: yyDollar[9].queryexpr.(AnalyticClause)}
		}
	case 337:
		yyDollar = yyS[yypt-8 : yypt+1]
//line parser.y:1896
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 338:
		yyDollar = yyS[yypt-10 : yypt+1]
//line parser.y:1900
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, IgnoreType: yyDollar[6].token, AnalyticClause: yyDollar[9].queryexpr.(AnalyticClause)}
		}
	case 339:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:1906
		{
			yyVAL.queryexpr = AnalyticClause{PartitionClause: yyDollar[1].queryexpr, OrderByClause: yyDollar[2].queryexpr}
		}
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1912
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 341:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser.y:1916
		{
			yyVAL.queryexpr = AnalyticClause{PartitionClause: yyDollar[1].queryexpr, OrderByClause: OrderByClause{Items: yyDollar[4].queryexprs}, WindowingClause: yyDollar[5].queryexpr}
		}
	case 342:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:1922
		{
			yyVAL.queryexpr = nil
		}
	case 343:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:1926
		{
			yyVAL.queryexpr = PartitionClause{Values: yyDollar[3].queryexprs}
		}
	case 344:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:1932
		{
			yyVAL.queryexpr = WindowingClause{FrameLow: yyDollar[2].queryexpr}
		}
	case 345:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser.y:1936
		{
			yyVAL.queryexpr = WindowingClause{FrameLow: yyDollar[3].queryexpr, FrameHigh: yyDollar[5].queryexpr}
		}
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:1942
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token, Unbounded: yyDollar[1].token}
		}
	case 347:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:1946
		{
			i, _ := strconv.Atoi(yyDollar[1].token.Literal)
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token, Offset: i}
		}
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:1951
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[1].token}
		}
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:1957
		{
			i, _ := strconv.Atoi(yyDollar[1].token.Literal)
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token, Offset: i}
		}
	case 350:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:1962
		{
			i, _ := strconv.Atoi(yyDollar[1].token.Literal)
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token, Offset: i}
		}
	case 351:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:1967
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[1].token}
		}
	case 352:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:1973
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token, Unbounded: yyDollar[1].token}
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1977
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 354:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:1983
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token, Unbounded: yyDollar[1].token}
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1987
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1993
		{
			yyVAL.queryexpr = yyDollar[1].identifier
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1997
		{
			yyVAL.queryexpr = Stdin{BaseExpr: NewBaseExpr(yyDollar[1].token)}
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2003
		{
			yyVAL.token = yyDollar[1].token
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2007
		{
			yyVAL.token = yyDollar[1].token
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2011
		{
			yyVAL.token = yyDollar[1].token
		}
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2015
		{
			yyVAL.token = yyDollar[1].token
		}
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2019
		{
			yyVAL.token = yyDollar[1].token
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2025
		{
			yyVAL.token = yyDollar[1].token
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2029
		{
			yyVAL.token = yyDollar[1].token
		}
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2033
		{
			yyVAL.token = yyDollar[1].token
		}
	case 366:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:2039
		{
			yyVAL.queryexpr = TableObject{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[1].token, Path: yyDollar[3].queryexpr, Args: nil}
		}
	case 367:
		yyDollar = yyS[yypt-6 : yypt+1]
//line parser.y:2043
		{
			yyVAL.queryexpr = TableObject{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[1].token, Path: yyDollar[3].queryexpr, Args: yyDollar[5].queryexprs}
		}
	case 368:
		yyDollar = yyS[yypt-6 : yypt+1]
//line parser.y:2047
		{
			yyVAL.queryexpr = TableObject{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[1].token, FormatElement: yyDollar[3].queryexpr, Path: yyDollar[5].queryexpr, Args: nil}
		}
	case 369:
		yyDollar = yyS[yypt-8 : yypt+1]
//line parser.y:2051
		{
			yyVAL.queryexpr = TableObject{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[1].token, FormatElement: yyDollar[3].queryexpr, Path: yyDollar[5].queryexpr, Args: yyDollar[7].queryexprs}
		}
	case 370:
		yyDollar = yyS[yypt-6 : yypt+1]
//line parser.y:2057
		{
			yyVAL.queryexpr = TableObject{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[1].token, FormatElement: yyDollar[3].queryexpr, Path: yyDollar[5].identifier, Args: nil}
		}
	case 371:
		yyDollar = yyS[yypt-8 : yypt+1]
//line parser.y:2061
		{
			yyVAL.queryexpr = TableObject{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[1].token, FormatElement: yyDollar[3].queryexpr, Path: yyDollar[5].identifier, Args: yyDollar[7].queryexprs}
		}
	case 372:
		yyDollar = yyS[yypt-6 : yypt+1]
//line parser.y:2065
		{
			yyVAL.queryexpr = TableObject{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[1].token, FormatElement: yyDollar[3].queryexpr, Path: yyDollar[5].queryexpr, Args: nil}
		}
	case 373:
		yyDollar = yyS[yypt-8 : yypt+1]
//line parser.y:2069
		{
			yyVAL.queryexpr = TableObject{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[1].token, FormatElement: yyDollar[3].queryexpr, Path: yyDollar[5].queryexpr, Args: yyDollar[7].queryexprs}
		}
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2075
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2079
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2085
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2089
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2095
		{
			yyVAL.table = Table{Object: yyDollar[1].queryexpr}
		}
	case 379:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:2099
		{
			yyVAL.table = Table{Object: yyDollar[1].queryexpr, Alias: yyDollar[2].identifier}
		}
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:2103
		{
			yyVAL.table = Table{Object: yyDollar[1].queryexpr, As: yyDollar[2].token, Alias: yyDollar[3].identifier}
		}
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2109
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:2113
		{
			yyDollar[2].table.Lateral = yyDollar[1].token
			yyDollar[2].table.BaseExpr = NewBaseExpr(yyDollar[1].token)
			yyVAL.queryexprs = []QueryExpression{yyDollar[2].table}
		}
	case 383:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:2119
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].table}, yyDollar[3].queryexprs...)
		}
	case 384:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:2123
		{
			yyDollar[2].table.Lateral = yyDollar[1].token
			yyDollar[2].table.BaseExpr = NewBaseExpr(yyDollar[1].token)
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[2].table}, yyDollar[4].queryexprs...)
		}
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2131
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr}
		}
	case 386:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:2135
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr, Alias: yyDollar[2].identifier}
		}
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:2139
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr, As: yyDollar[2].token, Alias: yyDollar[3].identifier}
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2143
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr}
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2147
		{
			yyVAL.queryexpr = Table{Object: Dual{}}
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2151
		{
			yyVAL.queryexpr = yyDollar[1].table
		}
	case 391:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:2155
		{
			yyVAL.queryexpr = Parentheses{Expr: yyDollar[2].queryexpr}
		}
	case 392:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:2161
		{
			yyVAL.queryexpr = Join{Table: yyDollar[1].queryexpr, JoinTable: yyDollar[4].queryexpr, JoinType: yyDollar[2].token, Condition: nil}
		}
	case 393:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser.y:2165
		{
			yyVAL.queryexpr = Join{Table: yyDollar[1].queryexpr, JoinTable: yyDollar[4].queryexpr, JoinType: yyDollar[2].token, Condition: yyDollar[5].queryexpr}
		}
	case 394:
		yyDollar = yyS[yypt-6 : yypt+1]
//line parser.y:2169
		{
			yyVAL.queryexpr = Join{Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Direction: yyDollar[2].token, Condition: yyDollar[6].queryexpr}
		}
	case 395:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser.y:2173
		{
			yyVAL.queryexpr = Join{Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Natural: yyDollar[2].token}
		}
	case 396:
		yyDollar = yyS[yypt-6 : yypt+1]
//line parser.y:2177
		{
			yyVAL.queryexpr = Join{Table: yyDollar[1].queryexpr, JoinTable: yyDollar[6].queryexpr, JoinType: yyDollar[4].token, Direction: yyDollar[3].token, Natural: yyDollar[2].token}
		}
	case 397:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser.y:2181
		{
			yyDollar[5].table.Lateral = yyDollar[4].token
			yyDollar[5].table.BaseExpr = NewBaseExpr(yyDollar[4].token)
			yyVAL.queryexpr = Join{Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].table, JoinType: yyDollar[2].token, Condition: nil}
		}
	case 398:
		yyDollar = yyS[yypt-6 : yypt+1]
//line parser.y:2187
		{
			yyDollar[5].table.Lateral = yyDollar[4].token
			yyDollar[5].table.BaseExpr = NewBaseExpr(yyDollar[4].token)
			yyVAL.queryexpr = Join{Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].table, JoinType: yyDollar[2].token, Condition: yyDollar[6].queryexpr}
		}
	case 399:
		yyDollar = yyS[yypt-7 : yypt+1]
//line parser.y:2193
		{
			yyDollar[6].table.Lateral = yyDollar[5].token
			yyDollar[6].table.BaseExpr = NewBaseExpr(yyDollar[5].token)
			yyVAL.queryexpr = Join{Table: yyDollar[1].queryexpr, JoinTable: yyDollar[6].table, JoinType: yyDollar[3].token, Direction: yyDollar[2].token, Condition: yyDollar[7].queryexpr}
		}
	case 400:
		yyDollar = yyS[yypt-6 : yypt+1]
//line parser.y:2199
		{
			yyDollar[6].table.Lateral = yyDollar[5].token
			yyDollar[6].table.BaseExpr = NewBaseExpr(yyDollar[5].token)
			yyVAL.queryexpr = Join{Table: yyDollar[1].queryexpr, JoinTable: yyDollar[6].table, JoinType: yyDollar[3].token, Natural: yyDollar[2].token}
		}
	case 401:
		yyDollar = yyS[yypt-7 : yypt+1]
//line parser.y:2205
		{
			yyDollar[7].table.Lateral = yyDollar[6].token
			yyDollar[7].table.BaseExpr = NewBaseExpr(yyDollar[6].token)
			yyVAL.queryexpr = Join{Table: yyDollar[1].queryexpr, JoinTable: yyDollar[7].table, JoinType: yyDollar[4].token, Direction: yyDollar[3].token, Natural: yyDollar[2].token}
		}
	case 402:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:2213
		{
			yyVAL.queryexpr = JoinCondition{On: yyDollar[2].queryexpr}
		}
	case 403:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:2217
		{
			yyVAL.queryexpr = JoinCondition{Using: yyDollar[3].queryexprs}
		}
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2223
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr}
		}
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:2227
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr, As: yyDollar[2].token, Alias: yyDollar[3].identifier}
		}
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2231
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr}
		}
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:2235
		{
			yyVAL.queryexpr = Field{Object: FieldReference{BaseExpr: yyDollar[1].identifier.BaseExpr, View: yyDollar[1].identifier, Column: yyDollar[3].queryexpr}}
		}
	case 408:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser.y:2241
		{
			yyVAL.queryexpr = CaseExpr{Value: yyDollar[2].queryexpr, When: yyDollar[3].queryexprs, Else: yyDollar[4].queryexpr}
		}
	case 409:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:2247
		{
			yyVAL.queryexpr = nil
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2251
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 411:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:2257
		{
			yyVAL.queryexprs = []QueryExpression{CaseExprWhen{Condition: yyDollar[2].queryexpr, Result: yyDollar[4].queryexpr}}
		}
	case 412:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser.y:2261
		{
			yyVAL.queryexprs = append([]QueryExpression{CaseExprWhen{Condition: yyDollar[2].queryexpr, Result: yyDollar[4].queryexpr}}, yyDollar[5].queryexprs...)
		}
	case 413:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:2267
		{
			yyVAL.queryexpr = nil
		}
	case 414:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:2271
		{
			yyVAL.queryexpr = CaseExprElse{Result: yyDollar[2].queryexpr}
		}
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2277
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 416:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:2281
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2287
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:2291
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2297
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:2301
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2307
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:2311
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2317
		{
			yyVAL.queryexprs = []QueryExpression{Table{Object: yyDollar[1].queryexpr}}
		}
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:2321
		{
			yyVAL.queryexprs = append([]QueryExpression{Table{Object: yyDollar[1].queryexpr}}, yyDollar[3].queryexprs...)
		}
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2327
		{
			yyVAL.queryexprs = []QueryExpression{Table{Object: yyDollar[1].queryexpr}}
		}
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:2331
		{
			yyVAL.queryexprs = append([]QueryExpression{Table{Object: yyDollar[1].queryexpr}}, yyDollar[3].queryexprs...)
		}
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2337
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].identifier}
		}
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:2341
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].identifier}, yyDollar[3].queryexprs...)
		}
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2347
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:2351
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 431:
		yyDollar = yyS[yypt-6 : yypt+1]
//line parser.y:2357
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, ValuesList: yyDollar[6].queryexprs}
		}
	case 432:
		yyDollar = yyS[yypt-9 : yypt+1]
//line parser.y:2361
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Fields: yyDollar[6].queryexprs, ValuesList: yyDollar[9].queryexprs}
		}
	case 433:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser.y:2365
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 434:
		yyDollar = yyS[yypt-8 : yypt+1]
//line parser.y:2369
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Fields: yyDollar[6].queryexprs, Query: yyDollar[8].queryexpr.(SelectQuery)}
		}
	case 435:
		yyDollar = yyS[yypt-7 : yypt+1]
//line parser.y:2375
		{
			yyVAL.expression = UpdateQuery{WithClause: yyDollar[1].queryexpr, Tables: yyDollar[3].queryexprs, SetList: yyDollar[5].updatesets, FromClause: yyDollar[6].queryexpr, WhereClause: yyDollar[7].queryexpr}
		}
	case 436:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:2381
		{
			yyVAL.updateset = UpdateSet{Field: yyDollar[1].queryexpr, Value: yyDollar[3].queryexpr}
		}
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2387
		{
			yyVAL.updatesets = []UpdateSet{yyDollar[1].updateset}
		}
	case 438:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:2391
		{
			yyVAL.updatesets = append([]UpdateSet{yyDollar[1].updateset}, yyDollar[3].updatesets...)
		}
	case 439:
		yyDollar = yyS[yypt-10 : yypt+1]
//line parser.y:2397
		{
			yyVAL.expression = ReplaceQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Keys: yyDollar[7].queryexprs, ValuesList: yyDollar[10].queryexprs}
		}
	case 440:
		yyDollar = yyS[yypt-13 : yypt+1]
//line parser.y:2401
		{
			yyVAL.expression = ReplaceQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Fields: yyDollar[6].queryexprs, Keys: yyDollar[10].queryexprs, ValuesList: yyDollar[13].queryexprs}
		}
	case 441:
		yyDollar = yyS[yypt-9 : yypt+1]
//line parser.y:2405
		{
			yyVAL.expression = ReplaceQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Keys: yyDollar[7].queryexprs, Query: yyDollar[9].queryexpr.(SelectQuery)}
		}
	case 442:
		yyDollar = yyS[yypt-12 : yypt+1]
//line parser.y:2409
		{
			yyVAL.expression = ReplaceQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Fields: yyDollar[6].queryexprs, Keys: yyDollar[10].queryexprs, Query: yyDollar[12].queryexpr.(SelectQuery)}
		}
	case 443:
		yyDollar = yyS[yypt-9 : yypt+1]
//line parser.y:2413
		{
			yyVAL.expression = ReplaceQuery{Table: Table{Object: yyDollar[3].queryexpr}, Keys: yyDollar[6].queryexprs, ValuesList: yyDollar[9].queryexprs}
		}
	case 444:
		yyDollar = yyS[yypt-12 : yypt+1]
//line parser.y:2417
		{
			yyVAL.expression = ReplaceQuery{Table: Table{Object: yyDollar[3].queryexpr}, Fields: yyDollar[5].queryexprs, Keys: yyDollar[9].queryexprs, ValuesList: yyDollar[12].queryexprs}
		}
	case 445:
		yyDollar = yyS[yypt-8 : yypt+1]
//line parser.y:2421
		{
			yyVAL.expression = ReplaceQuery{Table: Table{Object: yyDollar[3].queryexpr}, Keys: yyDollar[6].queryexprs, Query: yyDollar[8].queryexpr.(SelectQuery)}
		}
	case 446:
		yyDollar = yyS[yypt-11 : yypt+1]
//line parser.y:2425
		{
			yyVAL.expression = ReplaceQuery{Table: Table{Object: yyDollar[3].queryexpr}, Fields: yyDollar[5].queryexprs, Keys: yyDollar[9].queryexprs, Query: yyDollar[11].queryexpr.(SelectQuery)}
		}
	case 447:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser.y:2431
		{
			yyVAL.expression = DeleteQuery{BaseExpr: NewBaseExpr(yyDollar[2].token), WithClause: yyDollar[1].queryexpr, FromClause: FromClause{Tables: yyDollar[4].queryexprs}, WhereClause: yyDollar[5].queryexpr}
		}
	case 448:
		yyDollar = yyS[yypt-6 : yypt+1]
//line parser.y:2435
		{
			yyVAL.expression = DeleteQuery{BaseExpr: NewBaseExpr(yyDollar[2].token), WithClause: yyDollar[1].queryexpr, Tables: yyDollar[3].queryexprs, FromClause: FromClause{Tables: yyDollar[5].queryexprs}, WhereClause: yyDollar[6].queryexpr}
		}
	case 449:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:2441
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 450:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser.y:2445
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 451:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:2451
		{
			yyVAL.elseexpr = Else{}
		}
	case 452:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:2455
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 453:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:2461
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 454:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser.y:2465
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 455:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:2471
		{
			yyVAL.elseexpr = Else{}
		}
	case 456:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:2475
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 457:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:2481
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 458:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser.y:2485
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 459:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:2491
		{
			yyVAL.elseexpr = Else{}
		}
	case 460:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:2495
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 461:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:2501
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 462:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser.y:2505
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 463:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:2511
		{
			yyVAL.elseexpr = Else{}
		}
	case 464:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:2515
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 465:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:2521
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 466:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser.y:2525
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 467:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:2531
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 468:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:2535
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 469:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:2541
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 470:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser.y:2545
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 471:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:2551
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 472:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:2555
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 473:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:2561
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 474:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser.y:2565
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 475:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:2571
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 476:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:2575
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 477:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:2581
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 478:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser.y:2585
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 479:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:2591
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 480:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:2595
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2601
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 482:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2605
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2609
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2613
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2617
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2621
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2625
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2629
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 489:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2633
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2639
		{
			yyVAL.variable = Variable{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 491:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2645
		{
			yyVAL.variables = []Variable{yyDollar[1].variable}
		}
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:2649
		{
			yyVAL.variables = append([]Variable{yyDollar[1].variable}, yyDollar[3].variables...)
		}
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:2655
		{
			yyVAL.queryexpr = VariableSubstitution{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2661
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable}
		}
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:2665
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 496:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2671
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 497:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:2675
		{
			yyVAL.varassigns = append([]VariableAssignment{yyDollar[1].varassign}, yyDollar[3].varassigns...)
		}
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2681
		{
			yyVAL.envvar = EnvironmentVariable{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2687
		{
			yyVAL.queryexpr = RuntimeInformation{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 500:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2693
		{
			yyVAL.flag = Flag{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 501:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:2699
		{
			yyVAL.token = Token{}
		}
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2703
		{
			yyVAL.token = yyDollar[1].token
		}
	case 503:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:2709
		{
			yyVAL.token = Token{}
		}
	case 504:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2713
		{
			yyVAL.token = yyDollar[1].token
		}
	case 505:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:2719
		{
			yyVAL.token = Token{}
		}
	case 506:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2723
		{
			yyVAL.token = yyDollar[1].token
		}
	case 507:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:2729
		{
			yyVAL.token = Token{}
		}
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2733
		{
			yyVAL.token = yyDollar[1].token
		}
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2739
		{
			yyVAL.token = yyDollar[1].token
		}
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2743
		{
			yyVAL.token = yyDollar[1].token
		}
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2747
		{
			yyVAL.token = yyDollar[1].token
		}
	case 512:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:2753
		{
			yyVAL.token = Token{}
		}
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2757
		{
			yyVAL.token = yyDollar[1].token
		}
	case 514:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:2763
		{
			yyVAL.token = Token{}
		}
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2767
		{
			yyVAL.token = yyDollar[1].token
		}
	case 516:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:2773
		{
			yyVAL.token = Token{}
		}
	case 517:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2777
		{
			yyVAL.token = yyDollar[1].token
		}
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2783
		{
			yyVAL.token = yyDollar[1].token
		}
	case 519:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2787
		{
			yyDollar[1].token.Token = COMPARISON_OP
			yyVAL.token = yyDollar[1].token
		}
	case 520:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:2794
		{
			yyVAL.bool = false
		}
	case 521:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:2798
		{
			yyVAL.bool = true
		}
	}
	goto yystack /* stack new state and value */
}
